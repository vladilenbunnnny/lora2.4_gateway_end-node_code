ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 23, 1
   3              		.eabi_attribute 24, 1
   4              		.eabi_attribute 25, 1
   5              		.eabi_attribute 26, 1
   6              		.eabi_attribute 30, 4
   7              		.eabi_attribute 34, 0
   8              		.eabi_attribute 18, 4
   9              		.file	"smtc_bsp_mcu.c"
  10              		.text
  11              	.Ltext0:
  12              		.cfi_sections	.debug_frame
  13              		.global	__aeabi_idiv
  14              		.section	.text.bsp_mcu_wait_us,"ax",%progbits
  15              		.align	1
  16              		.global	bsp_mcu_wait_us
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	bsp_mcu_wait_us:
  24              	.LVL0:
  25              	.LFB67:
  26              		.file 1 "user_app/bsp_specific/smtc_bsp_mcu.c"
   1:user_app/bsp_specific/smtc_bsp_mcu.c **** /*!
   2:user_app/bsp_specific/smtc_bsp_mcu.c ****  * \file      smtc_bsp_mcu.c
   3:user_app/bsp_specific/smtc_bsp_mcu.c ****  *
   4:user_app/bsp_specific/smtc_bsp_mcu.c ****  * \brief     Board specific package MCU API implementation.
   5:user_app/bsp_specific/smtc_bsp_mcu.c ****  *
   6:user_app/bsp_specific/smtc_bsp_mcu.c ****  * Revised BSD License
   7:user_app/bsp_specific/smtc_bsp_mcu.c ****  * Copyright Semtech Corporation 2020. All rights reserved.
   8:user_app/bsp_specific/smtc_bsp_mcu.c ****  *
   9:user_app/bsp_specific/smtc_bsp_mcu.c ****  * Redistribution and use in source and binary forms, with or without
  10:user_app/bsp_specific/smtc_bsp_mcu.c ****  * modification, are permitted provided that the following conditions are met:
  11:user_app/bsp_specific/smtc_bsp_mcu.c ****  *     * Redistributions of source code must retain the above copyright
  12:user_app/bsp_specific/smtc_bsp_mcu.c ****  *       notice, this list of conditions and the following disclaimer.
  13:user_app/bsp_specific/smtc_bsp_mcu.c ****  *     * Redistributions in binary form must reproduce the above copyright
  14:user_app/bsp_specific/smtc_bsp_mcu.c ****  *       notice, this list of conditions and the following disclaimer in the
  15:user_app/bsp_specific/smtc_bsp_mcu.c ****  *       documentation and/or other materials provided with the distribution.
  16:user_app/bsp_specific/smtc_bsp_mcu.c ****  *     * Neither the name of the Semtech corporation nor the
  17:user_app/bsp_specific/smtc_bsp_mcu.c ****  *       names of its contributors may be used to endorse or promote products
  18:user_app/bsp_specific/smtc_bsp_mcu.c ****  *       derived from this software without specific prior written permission.
  19:user_app/bsp_specific/smtc_bsp_mcu.c ****  *
  20:user_app/bsp_specific/smtc_bsp_mcu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:user_app/bsp_specific/smtc_bsp_mcu.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:user_app/bsp_specific/smtc_bsp_mcu.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:user_app/bsp_specific/smtc_bsp_mcu.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL SEMTECH CORPORATION BE LIABLE FOR ANY DIRECT,
  24:user_app/bsp_specific/smtc_bsp_mcu.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  25:user_app/bsp_specific/smtc_bsp_mcu.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  26:user_app/bsp_specific/smtc_bsp_mcu.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  27:user_app/bsp_specific/smtc_bsp_mcu.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  28:user_app/bsp_specific/smtc_bsp_mcu.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  29:user_app/bsp_specific/smtc_bsp_mcu.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
  31:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  32:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 2


  33:user_app/bsp_specific/smtc_bsp_mcu.c ****  * -----------------------------------------------------------------------------
  34:user_app/bsp_specific/smtc_bsp_mcu.c ****  * --- DEPENDENCIES ------------------------------------------------------------
  35:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
  36:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  37:user_app/bsp_specific/smtc_bsp_mcu.c **** #include <stdint.h>   // C99 types
  38:user_app/bsp_specific/smtc_bsp_mcu.c **** #include <stdbool.h>  // bool type
  39:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  40:user_app/bsp_specific/smtc_bsp_mcu.c **** #include "stm32l0xx_hal.h"
  41:user_app/bsp_specific/smtc_bsp_mcu.c **** #include "stm32l0xx_ll_utils.h"
  42:user_app/bsp_specific/smtc_bsp_mcu.c **** #include "smtc_bsp.h"
  43:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  44:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_DBG_TRACE == BSP_FEATURE_ON )
  45:user_app/bsp_specific/smtc_bsp_mcu.c **** #include <stdarg.h>
  46:user_app/bsp_specific/smtc_bsp_mcu.c **** #include <string.h>
  47:user_app/bsp_specific/smtc_bsp_mcu.c **** #include <stdio.h>
  48:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
  49:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
  50:user_app/bsp_specific/smtc_bsp_mcu.c ****  * -----------------------------------------------------------------------------
  51:user_app/bsp_specific/smtc_bsp_mcu.c ****  * --- PRIVATE MACROS-----------------------------------------------------------
  52:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
  53:user_app/bsp_specific/smtc_bsp_mcu.c **** // STM32L073 temperature calibration information
  54:user_app/bsp_specific/smtc_bsp_mcu.c **** #define TEMP130_CAL_ADDR ( ( uint16_t* ) ( ( uint32_t ) 0x1FF8007E ) )
  55:user_app/bsp_specific/smtc_bsp_mcu.c **** #define TEMP30_CAL_ADDR ( ( uint16_t* ) ( ( uint32_t ) 0x1FF8007A ) )
  56:user_app/bsp_specific/smtc_bsp_mcu.c **** #define VDD_CALIB ( ( uint16_t )( 3000 ) )
  57:user_app/bsp_specific/smtc_bsp_mcu.c **** #define VDD_APPLI ( ( uint16_t )( 3000 ) )
  58:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
  59:user_app/bsp_specific/smtc_bsp_mcu.c ****  * -----------------------------------------------------------------------------
  60:user_app/bsp_specific/smtc_bsp_mcu.c ****  * --- PRIVATE CONSTANTS -------------------------------------------------------
  61:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
  62:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  63:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
  64:user_app/bsp_specific/smtc_bsp_mcu.c ****  * -----------------------------------------------------------------------------
  65:user_app/bsp_specific/smtc_bsp_mcu.c ****  * --- PRIVATE TYPES -----------------------------------------------------------
  66:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
  67:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  68:user_app/bsp_specific/smtc_bsp_mcu.c **** // Low Power options
  69:user_app/bsp_specific/smtc_bsp_mcu.c **** typedef enum low_power_mode_e
  70:user_app/bsp_specific/smtc_bsp_mcu.c **** {
  71:user_app/bsp_specific/smtc_bsp_mcu.c ****     LOW_POWER_ENABLE,
  72:user_app/bsp_specific/smtc_bsp_mcu.c ****     LOW_POWER_DISABLE,
  73:user_app/bsp_specific/smtc_bsp_mcu.c ****     LOW_POWER_DISABLE_ONCE
  74:user_app/bsp_specific/smtc_bsp_mcu.c **** } low_power_mode_t;
  75:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  76:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
  77:user_app/bsp_specific/smtc_bsp_mcu.c ****  * -----------------------------------------------------------------------------
  78:user_app/bsp_specific/smtc_bsp_mcu.c ****  * --- PRIVATE VARIABLES -------------------------------------------------------
  79:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
  80:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  81:user_app/bsp_specific/smtc_bsp_mcu.c **** static volatile bool             bsp_exit_wait       = false;
  82:user_app/bsp_specific/smtc_bsp_mcu.c **** static volatile low_power_mode_t bsp_lp_current_mode = LOW_POWER_ENABLE;
  83:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  84:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
  85:user_app/bsp_specific/smtc_bsp_mcu.c ****  * -----------------------------------------------------------------------------
  86:user_app/bsp_specific/smtc_bsp_mcu.c ****  * --- PRIVATE FUNCTIONS DECLARATION -------------------------------------------
  87:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
  88:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_system_clock_config( void );
  89:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_start_systick( void );
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 3


  90:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_stop_systick( void );
  91:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_gpio_init( void );
  92:user_app/bsp_specific/smtc_bsp_mcu.c **** 
  93:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_LOW_POWER_MODE == BSP_FEATURE_ON )
  94:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_deinit( void );
  95:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_reinit( void );
  96:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_system_clock_re_config_after_stop( void );
  97:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_low_power_handler( void );
  98:user_app/bsp_specific/smtc_bsp_mcu.c **** #else
  99:user_app/bsp_specific/smtc_bsp_mcu.c **** static bool bsp_mcu_no_low_power_wait( const int32_t milliseconds );
 100:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 101:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 102:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_DBG_TRACE == BSP_FEATURE_ON )
 103:user_app/bsp_specific/smtc_bsp_mcu.c **** static void vprint( const char* fmt, va_list argp );
 104:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 105:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 106:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
 107:user_app/bsp_specific/smtc_bsp_mcu.c ****  * -----------------------------------------------------------------------------
 108:user_app/bsp_specific/smtc_bsp_mcu.c ****  * --- PUBLIC FUNCTIONS DEFINITION ---------------------------------------------
 109:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
 110:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 111:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_critical_section_begin( uint32_t* mask )
 112:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 113:user_app/bsp_specific/smtc_bsp_mcu.c ****     *mask = __get_PRIMASK( );
 114:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 115:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 116:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 117:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_critical_section_end( uint32_t* mask )
 118:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 119:user_app/bsp_specific/smtc_bsp_mcu.c ****     __set_PRIMASK( *mask );
 120:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 121:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 122:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_disable_periph_irq( void )
 123:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 124:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_irq_disable( );
 125:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_tmr_irq_disable( );
 126:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 127:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 128:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_enable_periph_irq( void )
 129:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 130:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_irq_enable( );
 131:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_tmr_irq_enable( );
 132:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 133:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 134:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_init( void )
 135:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 136:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize MCU HAL library
 137:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_Init( );
 138:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize clocks
 139:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_system_clock_config( );
 140:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize GPIOs
 141:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_mcu_gpio_init( );
 142:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 143:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize low power timer
 144:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_tmr_init( );
 145:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 146:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize UART
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 4


 147:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_USE_USER_UART == BSP_FEATURE_ON )
 148:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_uart1_init( );
 149:user_app/bsp_specific/smtc_bsp_mcu.c ****     // bsp_uart_init( BSP_USER_UART_ID, 115200 );
 150:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 151:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_USE_PRINTF_UART == BSP_FEATURE_ON )
 152:user_app/bsp_specific/smtc_bsp_mcu.c ****     // bsp_uart_init( BSP_PRINTF_UART_ID, 115200 );
 153:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_uart2_init( );
 154:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 155:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Change stdio default buffer to \ref stdio_buffer
 156:user_app/bsp_specific/smtc_bsp_mcu.c ****     // setvbuf( stdout, stdio_buffer, _IOLBF, sizeof( stdio_buffer ) );
 157:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 158:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 159:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize SPI
 160:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 161:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_spi_init( BSP_RADIO_SPI_ID, RADIO_SPI_MOSI, RADIO_SPI_MISO, RADIO_SPI_SCLK );
 162:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 163:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize RTC
 164:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_rtc_init( );
 165:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 166:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize watchdog
 167:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_USE_WATCHDOG == 1 )
 168:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_watchdog_init( );
 169:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 170:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 171:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 172:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_disable_irq( void )
 173:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 174:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 175:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 176:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 177:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_enable_irq( void )
 178:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 179:user_app/bsp_specific/smtc_bsp_mcu.c ****     __enable_irq( );
 180:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 181:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 182:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_reset( void )
 183:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 184:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 185:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 186:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Restart system
 187:user_app/bsp_specific/smtc_bsp_mcu.c ****     NVIC_SystemReset( );
 188:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 189:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 190:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_panic( void )
 191:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 192:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 193:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 194:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "%s\n", __func__ );
 195:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "PANIC" );
 196:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 197:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( 1 )
 198:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 199:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 200:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 201:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 202:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_handle_lr1mac_issue( void )
 203:user_app/bsp_specific/smtc_bsp_mcu.c **** {
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 5


 204:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 205:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "%s\n", __func__ );
 206:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "LR1MAC PANIC" );
 207:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 208:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( 1 )
 209:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 210:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 211:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 212:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 213:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_modem_need_reset( void )
 214:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 215:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 216:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 217:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Restart system
 218:user_app/bsp_specific/smtc_bsp_mcu.c ****     NVIC_SystemReset( );
 219:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 220:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 221:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_set_sleep_for_ms( const int32_t milliseconds )
 222:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 223:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( milliseconds <= 0 )
 224:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 225:user_app/bsp_specific/smtc_bsp_mcu.c ****         return;
 226:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 227:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 228:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( bsp_lp_current_mode == LOW_POWER_DISABLE_ONCE )
 229:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 230:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_lp_current_mode = LOW_POWER_ENABLE;
 231:user_app/bsp_specific/smtc_bsp_mcu.c ****         return;
 232:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 233:user_app/bsp_specific/smtc_bsp_mcu.c ****     int32_t time_counter = milliseconds;
 234:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 235:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_watchdog_reload( );
 236:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 237:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_LOW_POWER_MODE == BSP_FEATURE_ON )
 238:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( ( time_counter > ( BSP_WATCHDOG_RELOAD_PERIOD_SECONDS * 1000 ) ) &&
 239:user_app/bsp_specific/smtc_bsp_mcu.c ****            ( bsp_lp_current_mode == LOW_POWER_ENABLE ) )
 240:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 241:user_app/bsp_specific/smtc_bsp_mcu.c ****         time_counter -= BSP_WATCHDOG_RELOAD_PERIOD_SECONDS * 1000;
 242:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_rtc_wakeup_timer_set_ms( BSP_WATCHDOG_RELOAD_PERIOD_SECONDS * 1000 );
 243:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_low_power_handler( );
 244:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_watchdog_reload( );
 245:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 246:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( bsp_lp_current_mode == LOW_POWER_ENABLE )
 247:user_app/bsp_specific/smtc_bsp_mcu.c ****     {  // have to wake up on modem cmd
 248:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_rtc_wakeup_timer_set_ms( time_counter );
 249:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_low_power_handler( );
 250:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_watchdog_reload( );
 251:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 252:user_app/bsp_specific/smtc_bsp_mcu.c **** #else
 253:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( ( time_counter > ( BSP_WATCHDOG_RELOAD_PERIOD_SECONDS * 1000 ) ) &&
 254:user_app/bsp_specific/smtc_bsp_mcu.c ****            ( bsp_lp_current_mode == LOW_POWER_ENABLE ) )
 255:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 256:user_app/bsp_specific/smtc_bsp_mcu.c ****         time_counter -= BSP_WATCHDOG_RELOAD_PERIOD_SECONDS * 1000;
 257:user_app/bsp_specific/smtc_bsp_mcu.c ****         if( ( bsp_mcu_no_low_power_wait( BSP_WATCHDOG_RELOAD_PERIOD_SECONDS * 1000 ) == true ) ||
 258:user_app/bsp_specific/smtc_bsp_mcu.c ****             ( bsp_lp_current_mode != LOW_POWER_ENABLE ) )
 259:user_app/bsp_specific/smtc_bsp_mcu.c ****         {
 260:user_app/bsp_specific/smtc_bsp_mcu.c ****             // wait function was interrupted, inturrupt here also
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 6


 261:user_app/bsp_specific/smtc_bsp_mcu.c ****             bsp_watchdog_reload( );
 262:user_app/bsp_specific/smtc_bsp_mcu.c ****             return;
 263:user_app/bsp_specific/smtc_bsp_mcu.c ****         }
 264:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_watchdog_reload( );
 265:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 266:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( bsp_lp_current_mode == LOW_POWER_ENABLE )
 267:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 268:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_mcu_no_low_power_wait( time_counter );
 269:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_watchdog_reload( );
 270:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 271:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 272:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 273:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 274:user_app/bsp_specific/smtc_bsp_mcu.c **** void __attribute__( ( optimize( "O0" ) ) ) bsp_mcu_wait_us( const int32_t microseconds )
 275:user_app/bsp_specific/smtc_bsp_mcu.c **** {
  27              		.loc 1 275 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		.loc 1 275 1 is_stmt 0 view .LVU1
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              		.cfi_def_cfa_offset 24
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 7860     		str	r0, [r7, #4]
 276:user_app/bsp_specific/smtc_bsp_mcu.c ****     const uint32_t nb_nop = microseconds * 1000 / 561;
  41              		.loc 1 276 5 is_stmt 1 view .LVU2
  42              		.loc 1 276 42 is_stmt 0 view .LVU3
  43 0008 7A68     		ldr	r2, [r7, #4]
  44 000a 1300     		movs	r3, r2
  45 000c 5B01     		lsls	r3, r3, #5
  46 000e 9B1A     		subs	r3, r3, r2
  47 0010 9B00     		lsls	r3, r3, #2
  48 0012 9B18     		adds	r3, r3, r2
  49 0014 DB00     		lsls	r3, r3, #3
  50              		.loc 1 276 49 view .LVU4
  51 0016 0B49     		ldr	r1, .L4
  52 0018 1800     		movs	r0, r3
  53              	.LVL1:
  54              		.loc 1 276 49 view .LVU5
  55 001a FFF7FEFF 		bl	__aeabi_idiv
  56              	.LVL2:
  57              		.loc 1 276 49 view .LVU6
  58 001e 0300     		movs	r3, r0
  59              		.loc 1 276 20 view .LVU7
  60 0020 BB60     		str	r3, [r7, #8]
  61              	.LVL3:
 277:user_app/bsp_specific/smtc_bsp_mcu.c ****     for( uint32_t i = 0; i < nb_nop; i++ )
  62              		.loc 1 277 5 is_stmt 1 view .LVU8
  63              	.LBB38:
  64              		.loc 1 277 10 view .LVU9
  65              		.loc 1 277 19 is_stmt 0 view .LVU10
  66 0022 0023     		movs	r3, #0
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 7


  67 0024 FB60     		str	r3, [r7, #12]
  68              	.LVL4:
  69              		.loc 1 277 5 view .LVU11
  70 0026 03E0     		b	.L2
  71              	.LVL5:
  72              	.L3:
 278:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 279:user_app/bsp_specific/smtc_bsp_mcu.c ****         __NOP( );
  73              		.loc 1 279 9 is_stmt 1 discriminator 3 view .LVU12
  74              		.syntax divided
  75              	@ 279 "user_app/bsp_specific/smtc_bsp_mcu.c" 1
  76 0028 C046     		nop
  77              	@ 0 "" 2
 277:user_app/bsp_specific/smtc_bsp_mcu.c ****     for( uint32_t i = 0; i < nb_nop; i++ )
  78              		.loc 1 277 38 discriminator 3 view .LVU13
 277:user_app/bsp_specific/smtc_bsp_mcu.c ****     for( uint32_t i = 0; i < nb_nop; i++ )
  79              		.loc 1 277 39 is_stmt 0 discriminator 3 view .LVU14
  80              		.thumb
  81              		.syntax unified
  82 002a FB68     		ldr	r3, [r7, #12]
  83 002c 0133     		adds	r3, r3, #1
  84 002e FB60     		str	r3, [r7, #12]
  85              	.LVL6:
  86              	.L2:
 277:user_app/bsp_specific/smtc_bsp_mcu.c ****     for( uint32_t i = 0; i < nb_nop; i++ )
  87              		.loc 1 277 26 is_stmt 1 discriminator 1 view .LVU15
 277:user_app/bsp_specific/smtc_bsp_mcu.c ****     for( uint32_t i = 0; i < nb_nop; i++ )
  88              		.loc 1 277 5 is_stmt 0 discriminator 1 view .LVU16
  89 0030 FA68     		ldr	r2, [r7, #12]
  90 0032 BB68     		ldr	r3, [r7, #8]
  91 0034 9A42     		cmp	r2, r3
  92 0036 F7D3     		bcc	.L3
  93              	.LBE38:
 280:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 281:user_app/bsp_specific/smtc_bsp_mcu.c **** }
  94              		.loc 1 281 1 view .LVU17
  95 0038 C046     		nop
  96 003a C046     		nop
  97 003c BD46     		mov	sp, r7
  98              	.LVL7:
  99              		.loc 1 281 1 view .LVU18
 100 003e 04B0     		add	sp, sp, #16
 101              		@ sp needed
 102              	.LVL8:
 103              		.loc 1 281 1 view .LVU19
 104 0040 80BD     		pop	{r7, pc}
 105              	.L5:
 106 0042 C046     		.align	2
 107              	.L4:
 108 0044 31020000 		.word	561
 109              		.cfi_endproc
 110              	.LFE67:
 112              		.section	.text.bsp_mcu_get_battery_level,"ax",%progbits
 113              		.align	1
 114              		.global	bsp_mcu_get_battery_level
 115              		.syntax unified
 116              		.code	16
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 8


 117              		.thumb_func
 118              		.fpu softvfp
 120              	bsp_mcu_get_battery_level:
 121              	.LFB68:
 282:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 283:user_app/bsp_specific/smtc_bsp_mcu.c **** uint8_t bsp_mcu_get_battery_level( void )
 284:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 122              		.loc 1 284 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 285:user_app/bsp_specific/smtc_bsp_mcu.c ****     return 254;
 127              		.loc 1 285 5 view .LVU21
 286:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 128              		.loc 1 286 1 is_stmt 0 view .LVU22
 129 0000 FE20     		movs	r0, #254
 130              		@ sp needed
 131 0002 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE68:
 135              		.section	.text.bsp_mcu_disable_low_power_wait,"ax",%progbits
 136              		.align	1
 137              		.global	bsp_mcu_disable_low_power_wait
 138              		.syntax unified
 139              		.code	16
 140              		.thumb_func
 141              		.fpu softvfp
 143              	bsp_mcu_disable_low_power_wait:
 144              	.LFB69:
 287:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 288:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_disable_low_power_wait( void )
 289:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 145              		.loc 1 289 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
 290:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_exit_wait       = true;
 150              		.loc 1 290 5 view .LVU24
 151              		.loc 1 290 25 is_stmt 0 view .LVU25
 152 0000 0123     		movs	r3, #1
 153 0002 024A     		ldr	r2, .L8
 291:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_DISABLE;
 292:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 154              		.loc 1 292 1 view .LVU26
 155              		@ sp needed
 290:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_exit_wait       = true;
 156              		.loc 1 290 25 view .LVU27
 157 0004 1370     		strb	r3, [r2]
 291:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_DISABLE;
 158              		.loc 1 291 5 is_stmt 1 view .LVU28
 291:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_DISABLE;
 159              		.loc 1 291 25 is_stmt 0 view .LVU29
 160 0006 024A     		ldr	r2, .L8+4
 161 0008 1370     		strb	r3, [r2]
 162              		.loc 1 292 1 view .LVU30
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 9


 163 000a 7047     		bx	lr
 164              	.L9:
 165              		.align	2
 166              	.L8:
 167 000c 00000000 		.word	.LANCHOR0
 168 0010 00000000 		.word	.LANCHOR1
 169              		.cfi_endproc
 170              	.LFE69:
 172              		.section	.text.bsp_mcu_enable_low_power_wait,"ax",%progbits
 173              		.align	1
 174              		.global	bsp_mcu_enable_low_power_wait
 175              		.syntax unified
 176              		.code	16
 177              		.thumb_func
 178              		.fpu softvfp
 180              	bsp_mcu_enable_low_power_wait:
 181              	.LFB70:
 293:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 294:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_enable_low_power_wait( void )
 295:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 182              		.loc 1 295 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 296:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_exit_wait       = false;
 187              		.loc 1 296 5 view .LVU32
 188              		.loc 1 296 25 is_stmt 0 view .LVU33
 189 0000 0023     		movs	r3, #0
 190 0002 024A     		ldr	r2, .L11
 297:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_ENABLE;
 298:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 191              		.loc 1 298 1 view .LVU34
 192              		@ sp needed
 296:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_exit_wait       = false;
 193              		.loc 1 296 25 view .LVU35
 194 0004 1370     		strb	r3, [r2]
 297:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_ENABLE;
 195              		.loc 1 297 5 is_stmt 1 view .LVU36
 297:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_ENABLE;
 196              		.loc 1 297 25 is_stmt 0 view .LVU37
 197 0006 024A     		ldr	r2, .L11+4
 198 0008 1370     		strb	r3, [r2]
 199              		.loc 1 298 1 view .LVU38
 200 000a 7047     		bx	lr
 201              	.L12:
 202              		.align	2
 203              	.L11:
 204 000c 00000000 		.word	.LANCHOR0
 205 0010 00000000 		.word	.LANCHOR1
 206              		.cfi_endproc
 207              	.LFE70:
 209              		.section	.text.bsp_mcu_disable_once_low_power_wait,"ax",%progbits
 210              		.align	1
 211              		.global	bsp_mcu_disable_once_low_power_wait
 212              		.syntax unified
 213              		.code	16
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 10


 214              		.thumb_func
 215              		.fpu softvfp
 217              	bsp_mcu_disable_once_low_power_wait:
 218              	.LFB71:
 299:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 300:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_mcu_disable_once_low_power_wait( void )
 301:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 219              		.loc 1 301 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 302:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_exit_wait       = true;
 224              		.loc 1 302 5 view .LVU40
 225              		.loc 1 302 25 is_stmt 0 view .LVU41
 226 0000 0122     		movs	r2, #1
 227 0002 034B     		ldr	r3, .L14
 303:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_DISABLE_ONCE;
 304:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 228              		.loc 1 304 1 view .LVU42
 229              		@ sp needed
 302:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_exit_wait       = true;
 230              		.loc 1 302 25 view .LVU43
 231 0004 1A70     		strb	r2, [r3]
 303:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_DISABLE_ONCE;
 232              		.loc 1 303 5 is_stmt 1 view .LVU44
 303:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lp_current_mode = LOW_POWER_DISABLE_ONCE;
 233              		.loc 1 303 25 is_stmt 0 view .LVU45
 234 0006 034B     		ldr	r3, .L14+4
 235 0008 9218     		adds	r2, r2, r2
 236 000a 1A70     		strb	r2, [r3]
 237              		.loc 1 304 1 view .LVU46
 238 000c 7047     		bx	lr
 239              	.L15:
 240 000e C046     		.align	2
 241              	.L14:
 242 0010 00000000 		.word	.LANCHOR0
 243 0014 00000000 		.word	.LANCHOR1
 244              		.cfi_endproc
 245              	.LFE71:
 247              		.global	__aeabi_uidiv
 248              		.section	.text.bsp_mcu_get_mcu_temperature,"ax",%progbits
 249              		.align	1
 250              		.global	bsp_mcu_get_mcu_temperature
 251              		.syntax unified
 252              		.code	16
 253              		.thumb_func
 254              		.fpu softvfp
 256              	bsp_mcu_get_mcu_temperature:
 257              	.LFB72:
 305:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 306:user_app/bsp_specific/smtc_bsp_mcu.c **** int32_t bsp_mcu_get_mcu_temperature( void )
 307:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 258              		.loc 1 307 1 is_stmt 1 view -0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 11


 308:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Configure ADC1 to read MCU internal temperature
 309:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_adc_init( 1 );
 262              		.loc 1 309 5 view .LVU48
 307:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Configure ADC1 to read MCU internal temperature
 263              		.loc 1 307 1 is_stmt 0 view .LVU49
 264 0000 70B5     		push	{r4, r5, r6, lr}
 265              		.cfi_def_cfa_offset 16
 266              		.cfi_offset 4, -16
 267              		.cfi_offset 5, -12
 268              		.cfi_offset 6, -8
 269              		.cfi_offset 14, -4
 270              		.loc 1 309 5 view .LVU50
 271 0002 0120     		movs	r0, #1
 272 0004 FFF7FEFF 		bl	bsp_adc_init
 273              	.LVL9:
 310:user_app/bsp_specific/smtc_bsp_mcu.c ****     uint32_t measure = bsp_adc_get_value( 1, 1000 );
 274              		.loc 1 310 5 is_stmt 1 view .LVU51
 275              		.loc 1 310 24 is_stmt 0 view .LVU52
 276 0008 FA21     		movs	r1, #250
 277 000a 0120     		movs	r0, #1
 278 000c 8900     		lsls	r1, r1, #2
 279 000e FFF7FEFF 		bl	bsp_adc_get_value
 280              	.LVL10:
 281 0012 0400     		movs	r4, r0
 282              	.LVL11:
 311:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_adc_deinit( 1 );
 283              		.loc 1 311 5 is_stmt 1 view .LVU53
 284 0014 0120     		movs	r0, #1
 285              	.LVL12:
 286              		.loc 1 311 5 is_stmt 0 view .LVU54
 287 0016 FFF7FEFF 		bl	bsp_adc_deinit
 288              	.LVL13:
 312:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 313:user_app/bsp_specific/smtc_bsp_mcu.c ****     int32_t temperature = 0;
 289              		.loc 1 313 5 is_stmt 1 view .LVU55
 314:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 315:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Convert ADC value to celsius using STM32 calibration
 316:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = ( ( measure * VDD_APPLI / VDD_CALIB ) - ( int32_t ) *TEMP30_CAL_ADDR );
 290              		.loc 1 316 5 view .LVU56
 291              		.loc 1 316 31 is_stmt 0 view .LVU57
 292 001a 2000     		movs	r0, r4
 293 001c 0749     		ldr	r1, .L17
 294              		.loc 1 316 71 view .LVU58
 295 001e 084B     		ldr	r3, .L17+4
 296              		.loc 1 316 31 view .LVU59
 297 0020 4843     		muls	r0, r1
 298              		.loc 1 316 71 view .LVU60
 299 0022 1D88     		ldrh	r5, [r3]
 300              		.loc 1 316 43 view .LVU61
 301 0024 FFF7FEFF 		bl	__aeabi_uidiv
 302              	.LVL14:
 303              		.loc 1 316 57 view .LVU62
 304 0028 431B     		subs	r3, r0, r5
 305              	.LVL15:
 317:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = temperature * ( int32_t )( 130 - 30 );
 306              		.loc 1 317 5 is_stmt 1 view .LVU63
 307              		.loc 1 317 17 is_stmt 0 view .LVU64
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 12


 308 002a 6420     		movs	r0, #100
 309 002c 5843     		muls	r0, r3
 310              	.LVL16:
 318:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = temperature / ( int32_t )( *TEMP130_CAL_ADDR - *TEMP30_CAL_ADDR );
 311              		.loc 1 318 5 is_stmt 1 view .LVU65
 312              		.loc 1 318 46 is_stmt 0 view .LVU66
 313 002e 054B     		ldr	r3, .L17+8
 319:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = temperature + 30;
 320:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 321:user_app/bsp_specific/smtc_bsp_mcu.c ****     return temperature;
 322:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 314              		.loc 1 322 1 view .LVU67
 315              		@ sp needed
 318:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = temperature / ( int32_t )( *TEMP130_CAL_ADDR - *TEMP30_CAL_ADDR );
 316              		.loc 1 318 46 view .LVU68
 317 0030 1988     		ldrh	r1, [r3]
 318:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = temperature / ( int32_t )( *TEMP130_CAL_ADDR - *TEMP30_CAL_ADDR );
 318              		.loc 1 318 64 view .LVU69
 319 0032 491B     		subs	r1, r1, r5
 318:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = temperature / ( int32_t )( *TEMP130_CAL_ADDR - *TEMP30_CAL_ADDR );
 320              		.loc 1 318 17 view .LVU70
 321 0034 FFF7FEFF 		bl	__aeabi_idiv
 322              	.LVL17:
 319:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = temperature + 30;
 323              		.loc 1 319 5 is_stmt 1 view .LVU71
 321:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 324              		.loc 1 321 5 view .LVU72
 319:user_app/bsp_specific/smtc_bsp_mcu.c ****     temperature = temperature + 30;
 325              		.loc 1 319 17 is_stmt 0 view .LVU73
 326 0038 1E30     		adds	r0, r0, #30
 327              	.LVL18:
 328              	.LVL19:
 329              		.loc 1 322 1 view .LVU74
 330 003a 70BD     		pop	{r4, r5, r6, pc}
 331              	.L18:
 332              		.align	2
 333              	.L17:
 334 003c B80B0000 		.word	3000
 335 0040 7A00F81F 		.word	536346746
 336 0044 7E00F81F 		.word	536346750
 337              		.cfi_endproc
 338              	.LFE72:
 340              		.section	.text.bsp_mcu_get_mcu_voltage,"ax",%progbits
 341              		.align	1
 342              		.global	bsp_mcu_get_mcu_voltage
 343              		.syntax unified
 344              		.code	16
 345              		.thumb_func
 346              		.fpu softvfp
 348              	bsp_mcu_get_mcu_voltage:
 349              	.LFB73:
 323:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 324:user_app/bsp_specific/smtc_bsp_mcu.c **** uint8_t bsp_mcu_get_mcu_voltage( void )
 325:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 350              		.loc 1 325 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 13


 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		@ link register save eliminated.
 326:user_app/bsp_specific/smtc_bsp_mcu.c ****     // to be implemented by user
 327:user_app/bsp_specific/smtc_bsp_mcu.c ****     return 0x98; //0x98 means 3v ()
 355              		.loc 1 327 5 view .LVU76
 328:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 356              		.loc 1 328 1 is_stmt 0 view .LVU77
 357 0000 9820     		movs	r0, #152
 358              		@ sp needed
 359 0002 7047     		bx	lr
 360              		.cfi_endproc
 361              	.LFE73:
 363              		.section	.text.SysTick_Handler,"ax",%progbits
 364              		.align	1
 365              		.global	SysTick_Handler
 366              		.syntax unified
 367              		.code	16
 368              		.thumb_func
 369              		.fpu softvfp
 371              	SysTick_Handler:
 372              	.LFB74:
 329:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 330:user_app/bsp_specific/smtc_bsp_mcu.c **** void SysTick_Handler( void )
 331:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 373              		.loc 1 331 1 is_stmt 1 view -0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 332:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_IncTick( );
 377              		.loc 1 332 5 view .LVU79
 331:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_IncTick( );
 378              		.loc 1 331 1 is_stmt 0 view .LVU80
 379 0000 10B5     		push	{r4, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 4, -8
 382              		.cfi_offset 14, -4
 383              		.loc 1 332 5 view .LVU81
 384 0002 FFF7FEFF 		bl	HAL_IncTick
 385              	.LVL20:
 333:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_SYSTICK_IRQHandler( );
 386              		.loc 1 333 5 is_stmt 1 view .LVU82
 334:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 387              		.loc 1 334 1 is_stmt 0 view .LVU83
 388              		@ sp needed
 333:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_SYSTICK_IRQHandler( );
 389              		.loc 1 333 5 view .LVU84
 390 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 391              	.LVL21:
 392              		.loc 1 334 1 view .LVU85
 393 000a 10BD     		pop	{r4, pc}
 394              		.cfi_endproc
 395              	.LFE74:
 397              		.section	.text.bsp_trace_print,"ax",%progbits
 398              		.align	1
 399              		.global	bsp_trace_print
 400              		.syntax unified
 401              		.code	16
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 14


 402              		.thumb_func
 403              		.fpu softvfp
 405              	bsp_trace_print:
 406              	.LVL22:
 407              	.LFB75:
 335:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 336:user_app/bsp_specific/smtc_bsp_mcu.c **** void bsp_trace_print( const char* fmt, ... )
 337:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 408              		.loc 1 337 1 is_stmt 1 view -0
 409              		.cfi_startproc
 410              		@ args = 4, pretend = 16, frame = 8
 411              		@ frame_needed = 0, uses_anonymous_args = 1
 338:user_app/bsp_specific/smtc_bsp_mcu.c **** #if BSP_DBG_TRACE == BSP_FEATURE_ON
 339:user_app/bsp_specific/smtc_bsp_mcu.c ****     va_list argp;
 412              		.loc 1 339 5 view .LVU87
 340:user_app/bsp_specific/smtc_bsp_mcu.c ****     va_start( argp, fmt );
 413              		.loc 1 340 5 view .LVU88
 337:user_app/bsp_specific/smtc_bsp_mcu.c **** #if BSP_DBG_TRACE == BSP_FEATURE_ON
 414              		.loc 1 337 1 is_stmt 0 view .LVU89
 415 0000 0FB4     		push	{r0, r1, r2, r3}
 416              		.cfi_def_cfa_offset 16
 417 0002 07B5     		push	{r0, r1, r2, lr}
 418              		.cfi_def_cfa_offset 32
 419              		.cfi_offset 0, -32
 420              		.cfi_offset 1, -28
 421              		.cfi_offset 2, -24
 422              		.cfi_offset 14, -20
 337:user_app/bsp_specific/smtc_bsp_mcu.c **** #if BSP_DBG_TRACE == BSP_FEATURE_ON
 423              		.loc 1 337 1 view .LVU90
 424 0004 04A9     		add	r1, sp, #16
 425 0006 01C9     		ldmia	r1!, {r0}
 426              		.loc 1 340 5 view .LVU91
 427 0008 0191     		str	r1, [sp, #4]
 341:user_app/bsp_specific/smtc_bsp_mcu.c ****     vprint( fmt, argp );
 428              		.loc 1 341 5 is_stmt 1 view .LVU92
 429 000a FFF7FEFF 		bl	vprint
 430              	.LVL23:
 342:user_app/bsp_specific/smtc_bsp_mcu.c ****     va_end( argp );
 431              		.loc 1 342 5 view .LVU93
 343:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 344:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 432              		.loc 1 344 1 is_stmt 0 view .LVU94
 433 000e 03B0     		add	sp, sp, #12
 434              		@ sp needed
 435 0010 08BC     		pop	{r3}
 436 0012 04B0     		add	sp, sp, #16
 437 0014 1847     		bx	r3
 438              		.cfi_endproc
 439              	.LFE75:
 441              		.section	.text.bsp_system_clock_config,"ax",%progbits
 442              		.align	1
 443              		.syntax unified
 444              		.code	16
 445              		.thumb_func
 446              		.fpu softvfp
 448              	bsp_system_clock_config:
 449              	.LFB76:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 15


 345:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 346:user_app/bsp_specific/smtc_bsp_mcu.c **** #ifdef USE_FULL_ASSERT
 347:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
 348:user_app/bsp_specific/smtc_bsp_mcu.c ****  * Function Name  : assert_failed
 349:user_app/bsp_specific/smtc_bsp_mcu.c ****  * Description    : Reports the name of the source file and the source line
 350:user_app/bsp_specific/smtc_bsp_mcu.c ****  * number where the assert_param error has occurred. Input          : - file:
 351:user_app/bsp_specific/smtc_bsp_mcu.c ****  * pointer to the source file name
 352:user_app/bsp_specific/smtc_bsp_mcu.c ****  *                  - line: assert_param error line source number
 353:user_app/bsp_specific/smtc_bsp_mcu.c ****  * Output         : None
 354:user_app/bsp_specific/smtc_bsp_mcu.c ****  * Return         : None
 355:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
 356:user_app/bsp_specific/smtc_bsp_mcu.c **** void assert_failed( uint8_t* file, uint32_t line )
 357:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 358:user_app/bsp_specific/smtc_bsp_mcu.c ****     // User can add his own implementation to report the file name and line
 359:user_app/bsp_specific/smtc_bsp_mcu.c ****     // number,
 360:user_app/bsp_specific/smtc_bsp_mcu.c ****     // ex: printf("Wrong parameters value: file %s on line %lu\r\n", file, line)
 361:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 362:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_PRINTF( "Wrong parameters value: file %s on line %lu\r\n", ( const char* ) file, 
 363:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Infinite loop
 364:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( 1 )
 365:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 366:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 367:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 368:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 369:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 370:user_app/bsp_specific/smtc_bsp_mcu.c **** /*
 371:user_app/bsp_specific/smtc_bsp_mcu.c ****  * -----------------------------------------------------------------------------
 372:user_app/bsp_specific/smtc_bsp_mcu.c ****  * --- PRIVATE FUNCTIONS DEFINITION --------------------------------------------
 373:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
 374:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 375:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_system_clock_config( void )
 376:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 450              		.loc 1 376 1 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 120
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 377:user_app/bsp_specific/smtc_bsp_mcu.c ****     RCC_OscInitTypeDef       rcc_osc_init;
 454              		.loc 1 377 5 view .LVU96
 378:user_app/bsp_specific/smtc_bsp_mcu.c ****     RCC_ClkInitTypeDef       rcc_clk_init;
 455              		.loc 1 378 5 view .LVU97
 379:user_app/bsp_specific/smtc_bsp_mcu.c ****     RCC_PeriphCLKInitTypeDef periph_clk_init;
 456              		.loc 1 379 5 view .LVU98
 380:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 381:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Configure the main internal regulator output voltage
 382:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 457              		.loc 1 382 5 view .LVU99
 458 0000 8023     		movs	r3, #128
 459 0002 244A     		ldr	r2, .L23
 460 0004 5B05     		lsls	r3, r3, #21
 461 0006 916B     		ldr	r1, [r2, #56]
 376:user_app/bsp_specific/smtc_bsp_mcu.c ****     RCC_OscInitTypeDef       rcc_osc_init;
 462              		.loc 1 376 1 is_stmt 0 view .LVU100
 463 0008 10B5     		push	{r4, lr}
 464              		.cfi_def_cfa_offset 8
 465              		.cfi_offset 4, -8
 466              		.cfi_offset 14, -4
 467              		.loc 1 382 5 view .LVU101
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 16


 468 000a 0B43     		orrs	r3, r1
 383:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG( PWR_REGULATOR_VOLTAGE_SCALE1 );
 469              		.loc 1 383 5 view .LVU102
 470 000c 2249     		ldr	r1, .L23+4
 382:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG( PWR_REGULATOR_VOLTAGE_SCALE1 );
 471              		.loc 1 382 5 view .LVU103
 472 000e 9363     		str	r3, [r2, #56]
 473              		.loc 1 383 5 is_stmt 1 view .LVU104
 474 0010 0B68     		ldr	r3, [r1]
 475 0012 224A     		ldr	r2, .L23+8
 376:user_app/bsp_specific/smtc_bsp_mcu.c ****     RCC_OscInitTypeDef       rcc_osc_init;
 476              		.loc 1 376 1 is_stmt 0 view .LVU105
 477 0014 9EB0     		sub	sp, sp, #120
 478              		.cfi_def_cfa_offset 128
 479              		.loc 1 383 5 view .LVU106
 480 0016 1A40     		ands	r2, r3
 481 0018 8023     		movs	r3, #128
 482 001a 1B01     		lsls	r3, r3, #4
 483 001c 1343     		orrs	r3, r2
 484 001e 0B60     		str	r3, [r1]
 384:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 385:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initializes the CPU, AHB and APB busses clocks
 386:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.OscillatorType      = RCC_OSCILLATORTYPE_HSI | RCC_OSCILLATORTYPE_LSE;
 485              		.loc 1 386 5 is_stmt 1 view .LVU107
 387:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.HSEState            = RCC_HSE_OFF;
 486              		.loc 1 387 5 view .LVU108
 388:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.HSIState            = RCC_HSI_ON;
 487              		.loc 1 388 5 view .LVU109
 389:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.LSEState            = RCC_LSE_ON;
 488              		.loc 1 389 5 view .LVU110
 390:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.LSIState            = RCC_LSI_OFF;
 489              		.loc 1 390 5 view .LVU111
 391:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 490              		.loc 1 391 5 view .LVU112
 386:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.HSEState            = RCC_HSE_OFF;
 491              		.loc 1 386 38 is_stmt 0 view .LVU113
 492 0020 0622     		movs	r2, #6
 493 0022 0023     		movs	r3, #0
 494 0024 1092     		str	r2, [sp, #64]
 495 0026 1193     		str	r3, [sp, #68]
 496 0028 8022     		movs	r2, #128
 497 002a 0123     		movs	r3, #1
 498 002c 5200     		lsls	r2, r2, #1
 499 002e 1292     		str	r2, [sp, #72]
 500 0030 1393     		str	r3, [sp, #76]
 501 0032 1022     		movs	r2, #16
 502 0034 0023     		movs	r3, #0
 503 0036 1492     		str	r2, [sp, #80]
 504 0038 1593     		str	r3, [sp, #84]
 392:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.PLL.PLLState        = RCC_PLL_ON;
 505              		.loc 1 392 5 is_stmt 1 view .LVU114
 393:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 506              		.loc 1 393 5 view .LVU115
 394:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.PLL.PLLMUL          = RCC_PLLMUL_6;
 507              		.loc 1 394 5 view .LVU116
 395:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.PLL.PLLDIV          = RCC_PLLDIV_3;
 508              		.loc 1 395 5 view .LVU117
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 17


 392:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 509              		.loc 1 392 38 is_stmt 0 view .LVU118
 510 003a 0222     		movs	r2, #2
 511 003c 0023     		movs	r3, #0
 512 003e 1A92     		str	r2, [sp, #104]
 513 0040 1B93     		str	r3, [sp, #108]
 514 0042 8022     		movs	r2, #128
 515 0044 8023     		movs	r3, #128
 516 0046 1203     		lsls	r2, r2, #12
 517 0048 1B04     		lsls	r3, r3, #16
 396:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( HAL_RCC_OscConfig( &rcc_osc_init ) != HAL_OK )
 518              		.loc 1 396 9 view .LVU119
 519 004a 10A8     		add	r0, sp, #64
 392:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_osc_init.PLL.PLLSource       = RCC_PLLSOURCE_HSI;
 520              		.loc 1 392 38 view .LVU120
 521 004c 1C92     		str	r2, [sp, #112]
 522 004e 1D93     		str	r3, [sp, #116]
 523              		.loc 1 396 5 is_stmt 1 view .LVU121
 524              		.loc 1 396 9 is_stmt 0 view .LVU122
 525 0050 FFF7FEFF 		bl	HAL_RCC_OscConfig
 526              	.LVL24:
 397:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 398:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 527              		.loc 1 398 5 is_stmt 1 view .LVU123
 399:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 400:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initializes the CPU, AHB and APB busses clocks
 401:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.ClockType      = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 528              		.loc 1 401 5 view .LVU124
 402:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 529              		.loc 1 402 5 view .LVU125
 403:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 530              		.loc 1 403 5 view .LVU126
 404:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.APB1CLKDivider = RCC_HCLK_DIV1;
 531              		.loc 1 404 5 view .LVU127
 401:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 532              		.loc 1 401 33 is_stmt 0 view .LVU128
 533 0054 0F22     		movs	r2, #15
 534 0056 0323     		movs	r3, #3
 405:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.APB2CLKDivider = RCC_HCLK_DIV1;
 535              		.loc 1 405 33 view .LVU129
 536 0058 0024     		movs	r4, #0
 401:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 537              		.loc 1 401 33 view .LVU130
 538 005a 0092     		str	r2, [sp]
 539 005c 0193     		str	r3, [sp, #4]
 540 005e 0022     		movs	r2, #0
 541 0060 0023     		movs	r3, #0
 406:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 407:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( HAL_RCC_ClockConfig( &rcc_clk_init, FLASH_LATENCY_1 ) != HAL_OK )
 542              		.loc 1 407 9 view .LVU131
 543 0062 0121     		movs	r1, #1
 544 0064 6846     		mov	r0, sp
 401:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 545              		.loc 1 401 33 view .LVU132
 546 0066 0292     		str	r2, [sp, #8]
 547 0068 0393     		str	r3, [sp, #12]
 405:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 18


 548              		.loc 1 405 5 is_stmt 1 view .LVU133
 405:user_app/bsp_specific/smtc_bsp_mcu.c ****     rcc_clk_init.APB2CLKDivider = RCC_HCLK_DIV1;
 549              		.loc 1 405 33 is_stmt 0 view .LVU134
 550 006a 0494     		str	r4, [sp, #16]
 551              		.loc 1 407 5 is_stmt 1 view .LVU135
 552              		.loc 1 407 9 is_stmt 0 view .LVU136
 553 006c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 554              	.LVL25:
 408:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 409:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 555              		.loc 1 409 5 is_stmt 1 view .LVU137
 410:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 411:user_app/bsp_specific/smtc_bsp_mcu.c ****     periph_clk_init.PeriphClockSelection =
 556              		.loc 1 411 5 view .LVU138
 412:user_app/bsp_specific/smtc_bsp_mcu.c ****         RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK_LPTIM1 | RCC_PERIPHCLK_USART1;
 413:user_app/bsp_specific/smtc_bsp_mcu.c ****     periph_clk_init.LptimClockSelection  = RCC_LPTIM1CLKSOURCE_LSE;
 557              		.loc 1 413 5 view .LVU139
 558              		.loc 1 413 42 is_stmt 0 view .LVU140
 559 0070 C023     		movs	r3, #192
 560 0072 1B03     		lsls	r3, r3, #12
 561 0074 0E93     		str	r3, [sp, #56]
 414:user_app/bsp_specific/smtc_bsp_mcu.c ****     periph_clk_init.RTCClockSelection    = RCC_RTCCLKSOURCE_LSE;
 562              		.loc 1 414 5 is_stmt 1 view .LVU141
 411:user_app/bsp_specific/smtc_bsp_mcu.c ****         RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK_LPTIM1 | RCC_PERIPHCLK_USART1;
 563              		.loc 1 411 42 is_stmt 0 view .LVU142
 564 0076 8023     		movs	r3, #128
 565 0078 A322     		movs	r2, #163
 566 007a 5B02     		lsls	r3, r3, #9
 415:user_app/bsp_specific/smtc_bsp_mcu.c ****     periph_clk_init.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 416:user_app/bsp_specific/smtc_bsp_mcu.c ****     periph_clk_init.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 417:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( HAL_RCCEx_PeriphCLKConfig( &periph_clk_init ) != HAL_OK )
 567              		.loc 1 417 9 view .LVU143
 568 007c 06A8     		add	r0, sp, #24
 411:user_app/bsp_specific/smtc_bsp_mcu.c ****         RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK_LPTIM1 | RCC_PERIPHCLK_USART1;
 569              		.loc 1 411 42 view .LVU144
 570 007e 0692     		str	r2, [sp, #24]
 571 0080 0793     		str	r3, [sp, #28]
 415:user_app/bsp_specific/smtc_bsp_mcu.c ****     periph_clk_init.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 572              		.loc 1 415 5 is_stmt 1 view .LVU145
 415:user_app/bsp_specific/smtc_bsp_mcu.c ****     periph_clk_init.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 573              		.loc 1 415 42 is_stmt 0 view .LVU146
 574 0082 0994     		str	r4, [sp, #36]
 416:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( HAL_RCCEx_PeriphCLKConfig( &periph_clk_init ) != HAL_OK )
 575              		.loc 1 416 5 is_stmt 1 view .LVU147
 416:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( HAL_RCCEx_PeriphCLKConfig( &periph_clk_init ) != HAL_OK )
 576              		.loc 1 416 42 is_stmt 0 view .LVU148
 577 0084 0A94     		str	r4, [sp, #40]
 578              		.loc 1 417 5 is_stmt 1 view .LVU149
 579              		.loc 1 417 9 is_stmt 0 view .LVU150
 580 0086 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 581              	.LVL26:
 418:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 419:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 582              		.loc 1 419 5 is_stmt 1 view .LVU151
 420:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 421:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_mcu_start_systick( );
 583              		.loc 1 421 5 view .LVU152
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 19


 584 008a FFF7FEFF 		bl	bsp_mcu_start_systick
 585              	.LVL27:
 422:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 586              		.loc 1 422 1 is_stmt 0 view .LVU153
 587 008e 1EB0     		add	sp, sp, #120
 588              		@ sp needed
 589 0090 10BD     		pop	{r4, pc}
 590              	.L24:
 591 0092 C046     		.align	2
 592              	.L23:
 593 0094 00100240 		.word	1073876992
 594 0098 00700040 		.word	1073770496
 595 009c FFE7FFFF 		.word	-6145
 596              		.cfi_endproc
 597              	.LFE76:
 599              		.section	.text.bsp_mcu_start_systick,"ax",%progbits
 600              		.align	1
 601              		.syntax unified
 602              		.code	16
 603              		.thumb_func
 604              		.fpu softvfp
 606              	bsp_mcu_start_systick:
 607              	.LFB77:
 423:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 424:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_start_systick( void )
 425:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 608              		.loc 1 425 1 is_stmt 1 view -0
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 0
 611              		@ frame_needed = 0, uses_anonymous_args = 0
 426:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Configure the Systick interrupt time
 427:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_SYSTICK_Config( HAL_RCC_GetHCLKFreq( ) / 1000 );
 612              		.loc 1 427 5 view .LVU155
 425:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Configure the Systick interrupt time
 613              		.loc 1 425 1 is_stmt 0 view .LVU156
 614 0000 10B5     		push	{r4, lr}
 615              		.cfi_def_cfa_offset 8
 616              		.cfi_offset 4, -8
 617              		.cfi_offset 14, -4
 618              		.loc 1 427 25 view .LVU157
 619 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 620              	.LVL28:
 621              		.loc 1 427 5 view .LVU158
 622 0006 FA21     		movs	r1, #250
 623 0008 8900     		lsls	r1, r1, #2
 624 000a FFF7FEFF 		bl	__aeabi_uidiv
 625              	.LVL29:
 626 000e FFF7FEFF 		bl	HAL_SYSTICK_Config
 627              	.LVL30:
 428:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 429:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Configure the Systick
 430:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_SYSTICK_CLKSourceConfig( SYSTICK_CLKSOURCE_HCLK );
 628              		.loc 1 430 5 is_stmt 1 view .LVU159
 629 0012 0420     		movs	r0, #4
 630 0014 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 631              	.LVL31:
 431:user_app/bsp_specific/smtc_bsp_mcu.c **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 20


 432:user_app/bsp_specific/smtc_bsp_mcu.c ****     // SysTick_IRQn interrupt configuration
 433:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_NVIC_SetPriority( SysTick_IRQn, 0, 0 );
 632              		.loc 1 433 5 view .LVU160
 633 0018 0022     		movs	r2, #0
 634 001a 0120     		movs	r0, #1
 635 001c 1100     		movs	r1, r2
 636 001e 4042     		rsbs	r0, r0, #0
 637 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 638              	.LVL32:
 434:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 639              		.loc 1 434 1 is_stmt 0 view .LVU161
 640              		@ sp needed
 641 0024 10BD     		pop	{r4, pc}
 642              		.cfi_endproc
 643              	.LFE77:
 645              		.section	.text.bsp_mcu_stop_systick,"ax",%progbits
 646              		.align	1
 647              		.syntax unified
 648              		.code	16
 649              		.thumb_func
 650              		.fpu softvfp
 652              	bsp_mcu_stop_systick:
 653              	.LFB78:
 435:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 436:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_stop_systick( void )
 437:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 654              		.loc 1 437 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		@ link register save eliminated.
 438:user_app/bsp_specific/smtc_bsp_mcu.c ****     SysTick->CTRL = 0;
 659              		.loc 1 438 5 view .LVU163
 660              		.loc 1 438 19 is_stmt 0 view .LVU164
 661 0000 0022     		movs	r2, #0
 662 0002 014B     		ldr	r3, .L27
 439:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 663              		.loc 1 439 1 view .LVU165
 664              		@ sp needed
 438:user_app/bsp_specific/smtc_bsp_mcu.c ****     SysTick->CTRL = 0;
 665              		.loc 1 438 19 view .LVU166
 666 0004 1A60     		str	r2, [r3]
 667              		.loc 1 439 1 view .LVU167
 668 0006 7047     		bx	lr
 669              	.L28:
 670              		.align	2
 671              	.L27:
 672 0008 10E000E0 		.word	-536813552
 673              		.cfi_endproc
 674              	.LFE78:
 676              		.section	.text.bsp_mcu_gpio_init,"ax",%progbits
 677              		.align	1
 678              		.syntax unified
 679              		.code	16
 680              		.thumb_func
 681              		.fpu softvfp
 683              	bsp_mcu_gpio_init:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 21


 684              	.LFB79:
 440:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 441:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_gpio_init( void )
 442:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 685              		.loc 1 442 1 is_stmt 1 view -0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 24
 688              		@ frame_needed = 0, uses_anonymous_args = 0
 443:user_app/bsp_specific/smtc_bsp_mcu.c ****     // GPIO Ports Clock Enable
 444:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOA_CLK_ENABLE( );
 689              		.loc 1 444 5 view .LVU169
 690              	.LBB39:
 691              		.loc 1 444 5 view .LVU170
 692              		.loc 1 444 5 view .LVU171
 693              	.LBE39:
 442:user_app/bsp_specific/smtc_bsp_mcu.c ****     // GPIO Ports Clock Enable
 694              		.loc 1 442 1 is_stmt 0 view .LVU172
 695 0000 10B5     		push	{r4, lr}
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 4, -8
 698              		.cfi_offset 14, -4
 699              	.LBB40:
 700              		.loc 1 444 5 view .LVU173
 701 0002 0124     		movs	r4, #1
 702              	.LBE40:
 703              	.LBB41:
 445:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOB_CLK_ENABLE( );
 704              		.loc 1 445 5 view .LVU174
 705 0004 0220     		movs	r0, #2
 706              	.LBE41:
 707              	.LBB42:
 444:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOB_CLK_ENABLE( );
 708              		.loc 1 444 5 view .LVU175
 709 0006 204B     		ldr	r3, .L30
 710              	.LBE42:
 442:user_app/bsp_specific/smtc_bsp_mcu.c ****     // GPIO Ports Clock Enable
 711              		.loc 1 442 1 view .LVU176
 712 0008 86B0     		sub	sp, sp, #24
 713              		.cfi_def_cfa_offset 32
 714              	.LBB43:
 444:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOB_CLK_ENABLE( );
 715              		.loc 1 444 5 view .LVU177
 716 000a DA6A     		ldr	r2, [r3, #44]
 717 000c 2243     		orrs	r2, r4
 718 000e DA62     		str	r2, [r3, #44]
 444:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOB_CLK_ENABLE( );
 719              		.loc 1 444 5 is_stmt 1 view .LVU178
 720 0010 DA6A     		ldr	r2, [r3, #44]
 721 0012 2240     		ands	r2, r4
 722 0014 0192     		str	r2, [sp, #4]
 444:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOB_CLK_ENABLE( );
 723              		.loc 1 444 5 view .LVU179
 724 0016 019A     		ldr	r2, [sp, #4]
 725              	.LBE43:
 444:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOB_CLK_ENABLE( );
 726              		.loc 1 444 5 view .LVU180
 727              		.loc 1 445 5 view .LVU181
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 22


 728              	.LBB44:
 729              		.loc 1 445 5 view .LVU182
 730              		.loc 1 445 5 view .LVU183
 731 0018 D96A     		ldr	r1, [r3, #44]
 732 001a 0143     		orrs	r1, r0
 733 001c D962     		str	r1, [r3, #44]
 734              		.loc 1 445 5 view .LVU184
 735 001e DA6A     		ldr	r2, [r3, #44]
 736 0020 0240     		ands	r2, r0
 737 0022 0292     		str	r2, [sp, #8]
 738              		.loc 1 445 5 view .LVU185
 739 0024 029A     		ldr	r2, [sp, #8]
 740              	.LBE44:
 741              		.loc 1 445 5 view .LVU186
 446:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOC_CLK_ENABLE( );
 742              		.loc 1 446 5 view .LVU187
 743              	.LBB45:
 744              		.loc 1 446 5 view .LVU188
 745              		.loc 1 446 5 view .LVU189
 746 0026 D96A     		ldr	r1, [r3, #44]
 747 0028 0018     		adds	r0, r0, r0
 748 002a 0143     		orrs	r1, r0
 749 002c D962     		str	r1, [r3, #44]
 750              		.loc 1 446 5 view .LVU190
 751              	.LBE45:
 752              	.LBB46:
 447:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOD_CLK_ENABLE( );
 448:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOH_CLK_ENABLE( );
 753              		.loc 1 448 5 is_stmt 0 view .LVU191
 754 002e 8021     		movs	r1, #128
 755              	.LBE46:
 756              	.LBB47:
 446:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOC_CLK_ENABLE( );
 757              		.loc 1 446 5 view .LVU192
 758 0030 DA6A     		ldr	r2, [r3, #44]
 759 0032 0240     		ands	r2, r0
 760 0034 0392     		str	r2, [sp, #12]
 446:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOC_CLK_ENABLE( );
 761              		.loc 1 446 5 is_stmt 1 view .LVU193
 762 0036 039A     		ldr	r2, [sp, #12]
 763              	.LBE47:
 446:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOC_CLK_ENABLE( );
 764              		.loc 1 446 5 view .LVU194
 447:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOD_CLK_ENABLE( );
 765              		.loc 1 447 5 view .LVU195
 766              	.LBB48:
 447:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOD_CLK_ENABLE( );
 767              		.loc 1 447 5 view .LVU196
 447:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOD_CLK_ENABLE( );
 768              		.loc 1 447 5 view .LVU197
 769 0038 DA6A     		ldr	r2, [r3, #44]
 770 003a 0430     		adds	r0, r0, #4
 771 003c 0243     		orrs	r2, r0
 772 003e DA62     		str	r2, [r3, #44]
 447:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOD_CLK_ENABLE( );
 773              		.loc 1 447 5 view .LVU198
 774 0040 DA6A     		ldr	r2, [r3, #44]
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 23


 775 0042 0240     		ands	r2, r0
 776 0044 0492     		str	r2, [sp, #16]
 447:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOD_CLK_ENABLE( );
 777              		.loc 1 447 5 view .LVU199
 778 0046 049A     		ldr	r2, [sp, #16]
 779              	.LBE48:
 447:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_GPIOD_CLK_ENABLE( );
 780              		.loc 1 447 5 view .LVU200
 781              		.loc 1 448 5 view .LVU201
 782              	.LBB49:
 783              		.loc 1 448 5 view .LVU202
 784              		.loc 1 448 5 view .LVU203
 785 0048 DA6A     		ldr	r2, [r3, #44]
 786 004a 0A43     		orrs	r2, r1
 787 004c DA62     		str	r2, [r3, #44]
 788              		.loc 1 448 5 view .LVU204
 789 004e DB6A     		ldr	r3, [r3, #44]
 790 0050 0B40     		ands	r3, r1
 791 0052 0593     		str	r3, [sp, #20]
 792              		.loc 1 448 5 view .LVU205
 793              	.LBE49:
 449:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 450:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_HW_DEBUG_PROBE == BSP_FEATURE_ON )
 451:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Enable debug in sleep/stop/standby
 452:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_DBGMCU_EnableDBGSleepMode( );
 453:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_DBGMCU_EnableDBGStopMode( );
 454:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_DBGMCU_EnableDBGStandbyMode( );
 455:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 456:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 457:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_init_out( RADIO_NSS, 1 );
 794              		.loc 1 457 5 is_stmt 0 view .LVU206
 795 0054 2100     		movs	r1, r4
 796              	.LBB50:
 448:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 797              		.loc 1 448 5 view .LVU207
 798 0056 059B     		ldr	r3, [sp, #20]
 799              	.LBE50:
 448:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 800              		.loc 1 448 5 is_stmt 1 view .LVU208
 801              		.loc 1 457 5 view .LVU209
 802 0058 FFF7FEFF 		bl	bsp_gpio_init_out
 803              	.LVL33:
 458:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_init_in( RADIO_BUSY_PIN, BSP_GPIO_PULL_MODE_NONE, BSP_GPIO_IRQ_MODE_OFF, NULL );
 804              		.loc 1 458 5 view .LVU210
 805 005c 0023     		movs	r3, #0
 806 005e 1320     		movs	r0, #19
 807 0060 1A00     		movs	r2, r3
 808 0062 1900     		movs	r1, r3
 809 0064 FFF7FEFF 		bl	bsp_gpio_init_in
 810              	.LVL34:
 459:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Here init only the pin as an exti rising and the callback will be attached later
 460:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_init_in( RADIO_DIOX, BSP_GPIO_PULL_MODE_NONE, BSP_GPIO_IRQ_MODE_RISING, NULL );
 811              		.loc 1 460 5 view .LVU211
 812 0068 0023     		movs	r3, #0
 813 006a 2200     		movs	r2, r4
 814 006c 1900     		movs	r1, r3
 815 006e 1420     		movs	r0, #20
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 24


 816 0070 FFF7FEFF 		bl	bsp_gpio_init_in
 817              	.LVL35:
 461:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_init_out( RADIO_NRST, 1 );
 818              		.loc 1 461 5 view .LVU212
 819 0074 2100     		movs	r1, r4
 820 0076 0020     		movs	r0, #0
 821 0078 FFF7FEFF 		bl	bsp_gpio_init_out
 822              	.LVL36:
 462:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 463:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_init_out( RADIO_ANTENNA_SWITCH, 1 );
 823              		.loc 1 463 5 view .LVU213
 824 007c 2100     		movs	r1, r4
 825 007e 1020     		movs	r0, #16
 826 0080 FFF7FEFF 		bl	bsp_gpio_init_out
 827              	.LVL37:
 464:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 828              		.loc 1 464 1 is_stmt 0 view .LVU214
 829 0084 06B0     		add	sp, sp, #24
 830              		@ sp needed
 831 0086 10BD     		pop	{r4, pc}
 832              	.L31:
 833              		.align	2
 834              	.L30:
 835 0088 00100240 		.word	1073876992
 836              		.cfi_endproc
 837              	.LFE79:
 839              		.section	.text.HAL_MspInit,"ax",%progbits
 840              		.align	1
 841              		.global	HAL_MspInit
 842              		.syntax unified
 843              		.code	16
 844              		.thumb_func
 845              		.fpu softvfp
 847              	HAL_MspInit:
 848              	.LFB80:
 465:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 466:user_app/bsp_specific/smtc_bsp_mcu.c **** void HAL_MspInit( void )
 467:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 849              		.loc 1 467 1 is_stmt 1 view -0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 468:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_SYSCFG_CLK_ENABLE( );
 853              		.loc 1 468 5 view .LVU216
 854 0000 0122     		movs	r2, #1
 855 0002 0E4B     		ldr	r3, .L33
 467:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_SYSCFG_CLK_ENABLE( );
 856              		.loc 1 467 1 is_stmt 0 view .LVU217
 857 0004 10B5     		push	{r4, lr}
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 4, -8
 860              		.cfi_offset 14, -4
 861              		.loc 1 468 5 view .LVU218
 862 0006 596B     		ldr	r1, [r3, #52]
 469:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 470:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 471:user_app/bsp_specific/smtc_bsp_mcu.c ****     // System interrupt init
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 25


 472:user_app/bsp_specific/smtc_bsp_mcu.c ****     // SVC_IRQn interrupt configuration
 473:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_NVIC_SetPriority( SVC_IRQn, 0, 0 );
 863              		.loc 1 473 5 view .LVU219
 864 0008 0520     		movs	r0, #5
 468:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 865              		.loc 1 468 5 view .LVU220
 866 000a 0A43     		orrs	r2, r1
 867 000c 5A63     		str	r2, [r3, #52]
 469:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 868              		.loc 1 469 5 is_stmt 1 view .LVU221
 869 000e 8022     		movs	r2, #128
 870 0010 996B     		ldr	r1, [r3, #56]
 871 0012 5205     		lsls	r2, r2, #21
 872 0014 0A43     		orrs	r2, r1
 873 0016 9A63     		str	r2, [r3, #56]
 874              		.loc 1 473 5 view .LVU222
 875 0018 0022     		movs	r2, #0
 876 001a 4042     		rsbs	r0, r0, #0
 877 001c 1100     		movs	r1, r2
 878 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 879              	.LVL38:
 474:user_app/bsp_specific/smtc_bsp_mcu.c ****     // PendSV_IRQn interrupt configuration
 475:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_NVIC_SetPriority( PendSV_IRQn, 0, 0 );
 880              		.loc 1 475 5 view .LVU223
 881 0022 0022     		movs	r2, #0
 882 0024 0220     		movs	r0, #2
 883 0026 1100     		movs	r1, r2
 884 0028 4042     		rsbs	r0, r0, #0
 885 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 886              	.LVL39:
 476:user_app/bsp_specific/smtc_bsp_mcu.c ****     // SysTick_IRQn interrupt configuration
 477:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_NVIC_SetPriority( SysTick_IRQn, 0, 0 );
 887              		.loc 1 477 5 view .LVU224
 888 002e 0022     		movs	r2, #0
 889 0030 0120     		movs	r0, #1
 890 0032 1100     		movs	r1, r2
 891 0034 4042     		rsbs	r0, r0, #0
 892 0036 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 893              	.LVL40:
 478:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 894              		.loc 1 478 1 is_stmt 0 view .LVU225
 895              		@ sp needed
 896 003a 10BD     		pop	{r4, pc}
 897              	.L34:
 898              		.align	2
 899              	.L33:
 900 003c 00100240 		.word	1073876992
 901              		.cfi_endproc
 902              	.LFE80:
 904              		.section	.text.bsp_lpm_enter_stop_mode,"ax",%progbits
 905              		.align	1
 906              		.syntax unified
 907              		.code	16
 908              		.thumb_func
 909              		.fpu softvfp
 911              	bsp_lpm_enter_stop_mode:
 912              	.LFB81:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 26


 479:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 480:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_LOW_POWER_MODE == BSP_FEATURE_ON )
 481:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 482:user_app/bsp_specific/smtc_bsp_mcu.c **** /**
 483:user_app/bsp_specific/smtc_bsp_mcu.c ****  * \brief Enters Low Power Stop Mode
 484:user_app/bsp_specific/smtc_bsp_mcu.c ****  *
 485:user_app/bsp_specific/smtc_bsp_mcu.c ****  * \note ARM exits the function when waking up
 486:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
 487:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_lpm_enter_stop_mode( void )
 488:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 913              		.loc 1 488 1 is_stmt 1 view -0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 8
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 489:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 917              		.loc 1 489 5 view .LVU227
 918              		.loc 1 489 5 view .LVU228
 488:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 919              		.loc 1 488 1 is_stmt 0 view .LVU229
 920 0000 07B5     		push	{r0, r1, r2, lr}
 921              		.cfi_def_cfa_offset 16
 922              		.cfi_offset 0, -16
 923              		.cfi_offset 1, -12
 924              		.cfi_offset 2, -8
 925              		.cfi_offset 14, -4
 926              		.loc 1 489 5 view .LVU230
 927 0002 01A8     		add	r0, sp, #4
 928 0004 FFF7FEFF 		bl	bsp_mcu_critical_section_begin
 929              	.LVL41:
 490:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 491:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_mcu_deinit( );
 930              		.loc 1 491 5 is_stmt 1 view .LVU231
 931 0008 FFF7FEFF 		bl	bsp_mcu_deinit
 932              	.LVL42:
 492:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 493:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Disable the Power Voltage Detector
 494:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_PWR_DisablePVD( );
 933              		.loc 1 494 5 view .LVU232
 934 000c FFF7FEFF 		bl	HAL_PWR_DisablePVD
 935              	.LVL43:
 495:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 496:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Clear wake up flag
 497:user_app/bsp_specific/smtc_bsp_mcu.c ****     SET_BIT( PWR->CR, PWR_CR_CWUF );
 936              		.loc 1 497 5 view .LVU233
 937 0010 0423     		movs	r3, #4
 938 0012 084A     		ldr	r2, .L36
 939 0014 1168     		ldr	r1, [r2]
 940 0016 0B43     		orrs	r3, r1
 941 0018 1360     		str	r3, [r2]
 498:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 499:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Enable Ultra low power mode
 500:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_PWREx_EnableUltraLowPower( );
 942              		.loc 1 500 5 view .LVU234
 943 001a FFF7FEFF 		bl	HAL_PWREx_EnableUltraLowPower
 944              	.LVL44:
 501:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 502:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Enable the fast wake up from Ultra low power mode
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 27


 503:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_PWREx_EnableFastWakeUp( );
 945              		.loc 1 503 5 view .LVU235
 946 001e FFF7FEFF 		bl	HAL_PWREx_EnableFastWakeUp
 947              	.LVL45:
 504:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 505:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_END( );
 948              		.loc 1 505 5 view .LVU236
 949              	.LBB51:
 950              	.LBI51:
 117:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 951              		.loc 1 117 6 view .LVU237
 952              	.LBB52:
 119:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 953              		.loc 1 119 5 view .LVU238
 954              	.LBB53:
 955              	.LBI53:
 956              		.file 2 "smtc_bsp/arm/cmsis/cmsis_gcc.h"
   1:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**************************************************************************//**
   2:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * @version  V5.0.4
   5:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * @date     09. April 2018
   6:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  ******************************************************************************/
   7:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /*
   8:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  *
  10:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  *
  12:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  *
  16:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  *
  18:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * limitations under the License.
  23:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
  24:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
  25:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
  28:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
  34:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef __has_builtin
  36:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  38:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
  39:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 28


  41:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  43:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __INLINE
  44:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __INLINE                               inline
  45:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  46:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  49:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif                                           
  52:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  55:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __USED
  56:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  58:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __WEAK
  59:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  61:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __PACKED
  62:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  64:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  67:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  70:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  78:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  86:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
  94:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 29


  98:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 102:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 110:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 113:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 116:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 117:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 118:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:smtc_bsp/arm/cmsis/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   @{
 122:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 123:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 124:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 125:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 129:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 131:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 133:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 134:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 135:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 136:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 140:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 142:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 144:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 145:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 146:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 147:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Control Register
 148:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               Control Register value
 150:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 151:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 153:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 154:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 30


 155:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 157:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 158:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 159:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 160:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 162:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 166:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 168:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 169:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 170:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 172:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 173:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 174:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 175:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 176:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 177:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Control Register
 178:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 181:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 183:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 185:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 186:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 187:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 189:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 193:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 195:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 197:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 198:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 199:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 200:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 201:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               IPSR Register value
 204:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 205:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 207:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 208:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 209:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 211:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 31


 212:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 213:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 214:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 215:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get APSR Register
 216:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               APSR Register value
 218:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 219:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 221:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 222:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 223:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 225:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 226:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 227:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 228:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 229:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               xPSR Register value
 232:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 233:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 235:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 236:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 237:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 239:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 240:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 241:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 242:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 243:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               PSP Register value
 246:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 247:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 249:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 250:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 251:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 253:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 254:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 255:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 256:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 258:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               PSP Register value
 261:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 262:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 264:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 265:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 266:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 268:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 32


 269:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 270:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 271:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 272:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 273:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 277:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 279:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 281:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 282:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 283:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 285:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 289:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 291:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 293:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 294:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 295:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 296:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 297:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               MSP Register value
 300:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 301:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 303:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 304:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 305:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 307:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 308:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 309:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 310:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 312:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               MSP Register value
 315:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 316:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 318:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 319:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 320:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 322:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 323:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 324:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 325:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 33


 326:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 327:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 331:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 333:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 335:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 336:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 337:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 339:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 343:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 345:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 347:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 348:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 349:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 350:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 352:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               SP Register value
 355:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 356:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 358:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 359:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 360:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 362:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 363:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 364:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 365:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 366:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 370:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 372:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 374:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 375:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 376:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 377:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 378:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               Priority Mask value
 381:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 382:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 34


 383:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 384:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 385:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 386:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 388:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 389:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 390:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 391:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 393:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               Priority Mask value
 396:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 397:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 399:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 400:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 401:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 403:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 404:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 405:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 406:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 407:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 408:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 412:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 957              		.loc 2 412 27 view .LVU239
 958              	.LBB54:
 413:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 414:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 959              		.loc 2 414 3 view .LVU240
 960 0022 019B     		ldr	r3, [sp, #4]
 961              		.syntax divided
 962              	@ 414 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 963 0024 83F31088 		MSR primask, r3
 964              	@ 0 "" 2
 965              	.LVL46:
 966              		.loc 2 414 3 is_stmt 0 view .LVU241
 967              		.thumb
 968              		.syntax unified
 969              	.LBE54:
 970              	.LBE53:
 971              	.LBE52:
 972              	.LBE51:
 506:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 507:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Enter Stop Mode
 508:user_app/bsp_specific/smtc_bsp_mcu.c ****     HAL_PWR_EnterSTOPMode( PWR_LOWPOWERREGULATOR_ON, PWR_STOPENTRY_WFI );
 973              		.loc 1 508 5 is_stmt 1 view .LVU242
 974 0028 0121     		movs	r1, #1
 975 002a 0800     		movs	r0, r1
 976 002c FFF7FEFF 		bl	HAL_PWR_EnterSTOPMode
 977              	.LVL47:
 509:user_app/bsp_specific/smtc_bsp_mcu.c **** }
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 35


 978              		.loc 1 509 1 is_stmt 0 view .LVU243
 979              		@ sp needed
 980 0030 07BD     		pop	{r0, r1, r2, pc}
 981              	.L37:
 982 0032 C046     		.align	2
 983              	.L36:
 984 0034 00700040 		.word	1073770496
 985              		.cfi_endproc
 986              	.LFE81:
 988              		.section	.text.bsp_lpm_exit_stop_mode,"ax",%progbits
 989              		.align	1
 990              		.syntax unified
 991              		.code	16
 992              		.thumb_func
 993              		.fpu softvfp
 995              	bsp_lpm_exit_stop_mode:
 996              	.LFB82:
 510:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 511:user_app/bsp_specific/smtc_bsp_mcu.c **** /*!
 512:user_app/bsp_specific/smtc_bsp_mcu.c ****  * \brief Exists Low Power Stop Mode
 513:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
 514:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_lpm_exit_stop_mode( void )
 515:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 997              		.loc 1 515 1 is_stmt 1 view -0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 8
 1000              		@ frame_needed = 0, uses_anonymous_args = 0
 516:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Disable IRQ while the MCU is not running on HSI
 517:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 1001              		.loc 1 517 5 view .LVU245
 1002              		.loc 1 517 5 view .LVU246
 515:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Disable IRQ while the MCU is not running on HSI
 1003              		.loc 1 515 1 is_stmt 0 view .LVU247
 1004 0000 07B5     		push	{r0, r1, r2, lr}
 1005              		.cfi_def_cfa_offset 16
 1006              		.cfi_offset 0, -16
 1007              		.cfi_offset 1, -12
 1008              		.cfi_offset 2, -8
 1009              		.cfi_offset 14, -4
 1010              		.loc 1 517 5 view .LVU248
 1011 0002 01A8     		add	r0, sp, #4
 1012 0004 FFF7FEFF 		bl	bsp_mcu_critical_section_begin
 1013              	.LVL48:
 518:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 519:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initializes the peripherals
 520:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_mcu_reinit( );
 1014              		.loc 1 520 5 is_stmt 1 view .LVU249
 1015 0008 FFF7FEFF 		bl	bsp_mcu_reinit
 1016              	.LVL49:
 521:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 522:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_END( );
 1017              		.loc 1 522 5 view .LVU250
 1018              	.LBB55:
 1019              	.LBI55:
 117:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 1020              		.loc 1 117 6 view .LVU251
 1021              	.LBB56:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 36


 119:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1022              		.loc 1 119 5 view .LVU252
 1023              	.LBB57:
 1024              	.LBI57:
 412:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1025              		.loc 2 412 27 view .LVU253
 1026              	.LBB58:
 1027              		.loc 2 414 3 view .LVU254
 1028 000c 019B     		ldr	r3, [sp, #4]
 1029              		.syntax divided
 1030              	@ 414 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1031 000e 83F31088 		MSR primask, r3
 1032              	@ 0 "" 2
 1033              	.LVL50:
 1034              		.loc 2 414 3 is_stmt 0 view .LVU255
 1035              		.thumb
 1036              		.syntax unified
 1037              	.LBE58:
 1038              	.LBE57:
 1039              	.LBE56:
 1040              	.LBE55:
 523:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1041              		.loc 1 523 1 view .LVU256
 1042              		@ sp needed
 1043 0012 07BD     		pop	{r0, r1, r2, pc}
 1044              		.cfi_endproc
 1045              	.LFE82:
 1047              		.section	.text.bsp_low_power_handler,"ax",%progbits
 1048              		.align	1
 1049              		.syntax unified
 1050              		.code	16
 1051              		.thumb_func
 1052              		.fpu softvfp
 1054              	bsp_low_power_handler:
 1055              	.LFB83:
 524:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 525:user_app/bsp_specific/smtc_bsp_mcu.c **** /*!
 526:user_app/bsp_specific/smtc_bsp_mcu.c ****  * \brief handler low power (TODO: put in a new smtc_bsp_lpm with option)
 527:user_app/bsp_specific/smtc_bsp_mcu.c ****  */
 528:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_low_power_handler( void )
 529:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 1056              		.loc 1 529 1 is_stmt 1 view -0
 1057              		.cfi_startproc
 1058              		@ args = 0, pretend = 0, frame = 0
 1059              		@ frame_needed = 0, uses_anonymous_args = 0
 530:user_app/bsp_specific/smtc_bsp_mcu.c ****     // first stop systick to avoid getting pending irq while going in stop mode
 531:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_mcu_stop_systick( );
 1060              		.loc 1 531 5 view .LVU258
 1061              	.LBB59:
 1062              	.LBI59:
 436:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 1063              		.loc 1 436 13 view .LVU259
 1064              	.LBB60:
 438:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1065              		.loc 1 438 5 view .LVU260
 438:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1066              		.loc 1 438 19 is_stmt 0 view .LVU261
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 37


 1067 0000 0022     		movs	r2, #0
 1068 0002 064B     		ldr	r3, .L40
 1069              	.LBE60:
 1070              	.LBE59:
 529:user_app/bsp_specific/smtc_bsp_mcu.c ****     // first stop systick to avoid getting pending irq while going in stop mode
 1071              		.loc 1 529 1 view .LVU262
 1072 0004 10B5     		push	{r4, lr}
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 4, -8
 1075              		.cfi_offset 14, -4
 1076              	.LBB62:
 1077              	.LBB61:
 438:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1078              		.loc 1 438 19 view .LVU263
 1079 0006 1A60     		str	r2, [r3]
 1080              	.LBE61:
 1081              	.LBE62:
 532:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 533:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 1082              		.loc 1 533 5 is_stmt 1 view .LVU264
 1083              	.LBB63:
 1084              	.LBI63:
 140:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1085              		.loc 2 140 27 view .LVU265
 1086              	.LBB64:
 142:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 1087              		.loc 2 142 3 view .LVU266
 1088              		.syntax divided
 1089              	@ 142 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1090 0008 72B6     		cpsid i
 1091              	@ 0 "" 2
 1092              		.thumb
 1093              		.syntax unified
 1094              	.LBE64:
 1095              	.LBE63:
 534:user_app/bsp_specific/smtc_bsp_mcu.c ****     /*!
 535:user_app/bsp_specific/smtc_bsp_mcu.c ****      * If an interrupt has occurred after __disable_irq( ), it is kept pending
 536:user_app/bsp_specific/smtc_bsp_mcu.c ****      * and cortex will not enter low power anyway
 537:user_app/bsp_specific/smtc_bsp_mcu.c ****      */
 538:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 539:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lpm_enter_stop_mode( );
 1096              		.loc 1 539 5 view .LVU267
 1097 000a FFF7FEFF 		bl	bsp_lpm_enter_stop_mode
 1098              	.LVL51:
 540:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_lpm_exit_stop_mode( );
 1099              		.loc 1 540 5 view .LVU268
 1100 000e FFF7FEFF 		bl	bsp_lpm_exit_stop_mode
 1101              	.LVL52:
 541:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 542:user_app/bsp_specific/smtc_bsp_mcu.c ****     __enable_irq( );
 1102              		.loc 1 542 5 view .LVU269
 1103              	.LBB65:
 1104              	.LBI65:
 129:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1105              		.loc 2 129 27 view .LVU270
 1106              	.LBB66:
 131:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 38


 1107              		.loc 2 131 3 view .LVU271
 1108              		.syntax divided
 1109              	@ 131 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1110 0012 62B6     		cpsie i
 1111              	@ 0 "" 2
 1112              		.thumb
 1113              		.syntax unified
 1114              	.LBE66:
 1115              	.LBE65:
 543:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 544:user_app/bsp_specific/smtc_bsp_mcu.c ****     // re start systick
 545:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_mcu_start_systick( );
 1116              		.loc 1 545 5 view .LVU272
 1117 0014 FFF7FEFF 		bl	bsp_mcu_start_systick
 1118              	.LVL53:
 546:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1119              		.loc 1 546 1 is_stmt 0 view .LVU273
 1120              		@ sp needed
 1121 0018 10BD     		pop	{r4, pc}
 1122              	.L41:
 1123 001a C046     		.align	2
 1124              	.L40:
 1125 001c 10E000E0 		.word	-536813552
 1126              		.cfi_endproc
 1127              	.LFE83:
 1129              		.section	.text.bsp_mcu_deinit,"ax",%progbits
 1130              		.align	1
 1131              		.syntax unified
 1132              		.code	16
 1133              		.thumb_func
 1134              		.fpu softvfp
 1136              	bsp_mcu_deinit:
 1137              	.LFB84:
 547:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 548:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_deinit( void )
 549:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 1138              		.loc 1 549 1 is_stmt 1 view -0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 550:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_spi_deinit( BSP_RADIO_SPI_ID );
 1142              		.loc 1 550 5 view .LVU275
 549:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_spi_deinit( BSP_RADIO_SPI_ID );
 1143              		.loc 1 549 1 is_stmt 0 view .LVU276
 1144 0000 10B5     		push	{r4, lr}
 1145              		.cfi_def_cfa_offset 8
 1146              		.cfi_offset 4, -8
 1147              		.cfi_offset 14, -4
 1148              		.loc 1 550 5 view .LVU277
 1149 0002 0120     		movs	r0, #1
 1150 0004 FFF7FEFF 		bl	bsp_spi_deinit
 1151              	.LVL54:
 551:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_uart2_deinit( );
 1152              		.loc 1 551 5 is_stmt 1 view .LVU278
 552:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_uart1_deinit( );
 553:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1153              		.loc 1 553 1 is_stmt 0 view .LVU279
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 39


 1154              		@ sp needed
 551:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_uart2_deinit( );
 1155              		.loc 1 551 5 view .LVU280
 1156 0008 FFF7FEFF 		bl	bsp_uart2_deinit
 1157              	.LVL55:
 552:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_uart1_deinit( );
 1158              		.loc 1 552 5 is_stmt 1 view .LVU281
 1159 000c FFF7FEFF 		bl	bsp_uart1_deinit
 1160              	.LVL56:
 1161              		.loc 1 553 1 is_stmt 0 view .LVU282
 1162 0010 10BD     		pop	{r4, pc}
 1163              		.cfi_endproc
 1164              	.LFE84:
 1166              		.section	.text.bsp_mcu_reinit,"ax",%progbits
 1167              		.align	1
 1168              		.syntax unified
 1169              		.code	16
 1170              		.thumb_func
 1171              		.fpu softvfp
 1173              	bsp_mcu_reinit:
 1174              	.LFB85:
 554:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 555:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_mcu_reinit( void )
 556:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 1175              		.loc 1 556 1 is_stmt 1 view -0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 557:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Reconfig needed OSC and PLL
 558:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_system_clock_re_config_after_stop( );
 1179              		.loc 1 558 5 view .LVU284
 556:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Reconfig needed OSC and PLL
 1180              		.loc 1 556 1 is_stmt 0 view .LVU285
 1181 0000 10B5     		push	{r4, lr}
 1182              		.cfi_def_cfa_offset 8
 1183              		.cfi_offset 4, -8
 1184              		.cfi_offset 14, -4
 1185              		.loc 1 558 5 view .LVU286
 1186 0002 FFF7FEFF 		bl	bsp_system_clock_re_config_after_stop
 1187              	.LVL57:
 559:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 560:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize UART
 561:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_USE_PRINTF_UART == BSP_FEATURE_ON )
 562:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_uart1_init( );
 1188              		.loc 1 562 5 is_stmt 1 view .LVU287
 1189 0006 FFF7FEFF 		bl	bsp_uart1_init
 1190              	.LVL58:
 563:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_uart2_init( );
 1191              		.loc 1 563 5 view .LVU288
 1192 000a FFF7FEFF 		bl	bsp_uart2_init
 1193              	.LVL59:
 564:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 565:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 566:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize SPI
 567:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_spi_init( BSP_RADIO_SPI_ID, RADIO_SPI_MOSI, RADIO_SPI_MISO, RADIO_SPI_SCLK );
 1194              		.loc 1 567 5 view .LVU289
 1195 000e 0523     		movs	r3, #5
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 40


 1196 0010 0622     		movs	r2, #6
 1197 0012 0721     		movs	r1, #7
 1198 0014 0120     		movs	r0, #1
 1199 0016 FFF7FEFF 		bl	bsp_spi_init
 1200              	.LVL60:
 568:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1201              		.loc 1 568 1 is_stmt 0 view .LVU290
 1202              		@ sp needed
 1203 001a 10BD     		pop	{r4, pc}
 1204              		.cfi_endproc
 1205              	.LFE85:
 1207              		.section	.text.bsp_system_clock_re_config_after_stop,"ax",%progbits
 1208              		.align	1
 1209              		.syntax unified
 1210              		.code	16
 1211              		.thumb_func
 1212              		.fpu softvfp
 1214              	bsp_system_clock_re_config_after_stop:
 1215              	.LFB86:
 569:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 570:user_app/bsp_specific/smtc_bsp_mcu.c **** static void bsp_system_clock_re_config_after_stop( void )
 571:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 1216              		.loc 1 571 1 is_stmt 1 view -0
 1217              		.cfi_startproc
 1218              		@ args = 0, pretend = 0, frame = 0
 1219              		@ frame_needed = 0, uses_anonymous_args = 0
 1220              		@ link register save eliminated.
 572:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 1221              		.loc 1 572 5 view .LVU292
 1222 0000 8022     		movs	r2, #128
 1223 0002 164B     		ldr	r3, .L53
 1224 0004 5205     		lsls	r2, r2, #21
 1225 0006 996B     		ldr	r1, [r3, #56]
 573:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG( PWR_REGULATOR_VOLTAGE_SCALE1 );
 1226              		.loc 1 573 5 is_stmt 0 view .LVU293
 1227 0008 1548     		ldr	r0, .L53+4
 572:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 1228              		.loc 1 572 5 view .LVU294
 1229 000a 0A43     		orrs	r2, r1
 1230 000c 9A63     		str	r2, [r3, #56]
 1231              		.loc 1 573 5 is_stmt 1 view .LVU295
 1232 000e 0268     		ldr	r2, [r0]
 1233 0010 1449     		ldr	r1, .L53+8
 1234 0012 1140     		ands	r1, r2
 1235 0014 8022     		movs	r2, #128
 1236 0016 1201     		lsls	r2, r2, #4
 1237 0018 0A43     		orrs	r2, r1
 574:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 575:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Enable HSI
 576:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_HSI_CONFIG( RCC_HSI_ON );
 1238              		.loc 1 576 5 is_stmt 0 view .LVU296
 1239 001a 0921     		movs	r1, #9
 573:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG( PWR_REGULATOR_VOLTAGE_SCALE1 );
 1240              		.loc 1 573 5 view .LVU297
 1241 001c 0260     		str	r2, [r0]
 1242              		.loc 1 576 5 is_stmt 1 view .LVU298
 1243 001e 1A68     		ldr	r2, [r3]
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 41


 1244 0020 8A43     		bics	r2, r1
 1245 0022 1100     		movs	r1, r2
 1246 0024 0122     		movs	r2, #1
 1247 0026 0A43     		orrs	r2, r1
 1248 0028 1A60     		str	r2, [r3]
 577:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 578:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Wait till HSI is ready
 579:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( __HAL_RCC_GET_FLAG( RCC_FLAG_HSIRDY ) == RESET )
 1249              		.loc 1 579 5 view .LVU299
 1250              		.loc 1 579 12 is_stmt 0 view .LVU300
 1251 002a 0422     		movs	r2, #4
 1252              	.L45:
 580:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 581:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 1253              		.loc 1 581 5 is_stmt 1 discriminator 1 view .LVU301
 579:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1254              		.loc 1 579 10 discriminator 1 view .LVU302
 579:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1255              		.loc 1 579 12 is_stmt 0 discriminator 1 view .LVU303
 1256 002c 1968     		ldr	r1, [r3]
 579:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1257              		.loc 1 579 10 discriminator 1 view .LVU304
 1258 002e 1142     		tst	r1, r2
 1259 0030 FCD0     		beq	.L45
 582:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 583:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Enable PLL
 584:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_PLL_ENABLE( );
 1260              		.loc 1 584 5 is_stmt 1 view .LVU305
 1261 0032 8022     		movs	r2, #128
 1262 0034 1968     		ldr	r1, [r3]
 1263 0036 5204     		lsls	r2, r2, #17
 1264 0038 0A43     		orrs	r2, r1
 1265 003a 1A60     		str	r2, [r3]
 585:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 586:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Wait till PLL is ready
 587:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( __HAL_RCC_GET_FLAG( RCC_FLAG_PLLRDY ) == RESET )
 1266              		.loc 1 587 5 view .LVU306
 1267              		.loc 1 587 12 is_stmt 0 view .LVU307
 1268 003c 8022     		movs	r2, #128
 1269 003e 9204     		lsls	r2, r2, #18
 1270              	.L46:
 588:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 589:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 1271              		.loc 1 589 5 is_stmt 1 discriminator 1 view .LVU308
 587:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1272              		.loc 1 587 10 discriminator 1 view .LVU309
 587:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1273              		.loc 1 587 12 is_stmt 0 discriminator 1 view .LVU310
 1274 0040 1968     		ldr	r1, [r3]
 587:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1275              		.loc 1 587 10 discriminator 1 view .LVU311
 1276 0042 1142     		tst	r1, r2
 1277 0044 FCD0     		beq	.L46
 590:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 591:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Select PLL as system clock source
 592:user_app/bsp_specific/smtc_bsp_mcu.c ****     __HAL_RCC_SYSCLK_CONFIG( RCC_SYSCLKSOURCE_PLLCLK );
 1278              		.loc 1 592 5 is_stmt 1 view .LVU312
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 42


 1279 0046 0322     		movs	r2, #3
 1280 0048 D968     		ldr	r1, [r3, #12]
 1281 004a 0A43     		orrs	r2, r1
 593:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 594:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Wait till PLL is used as system clock source
 595:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( __HAL_RCC_GET_SYSCLK_SOURCE( ) != RCC_SYSCLKSOURCE_STATUS_PLLCLK )
 1282              		.loc 1 595 12 is_stmt 0 view .LVU313
 1283 004c 0C21     		movs	r1, #12
 592:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1284              		.loc 1 592 5 view .LVU314
 1285 004e DA60     		str	r2, [r3, #12]
 1286              		.loc 1 595 5 is_stmt 1 view .LVU315
 1287              	.L47:
 596:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 597:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 1288              		.loc 1 597 5 discriminator 1 view .LVU316
 595:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1289              		.loc 1 595 10 discriminator 1 view .LVU317
 595:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1290              		.loc 1 595 12 is_stmt 0 discriminator 1 view .LVU318
 1291 0050 DA68     		ldr	r2, [r3, #12]
 1292 0052 0A40     		ands	r2, r1
 595:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1293              		.loc 1 595 10 discriminator 1 view .LVU319
 1294 0054 0C2A     		cmp	r2, #12
 1295 0056 FBD1     		bne	.L47
 598:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1296              		.loc 1 598 1 view .LVU320
 1297              		@ sp needed
 1298 0058 7047     		bx	lr
 1299              	.L54:
 1300 005a C046     		.align	2
 1301              	.L53:
 1302 005c 00100240 		.word	1073876992
 1303 0060 00700040 		.word	1073770496
 1304 0064 FFE7FFFF 		.word	-6145
 1305              		.cfi_endproc
 1306              	.LFE86:
 1308              		.section	.text.vprint,"ax",%progbits
 1309              		.align	1
 1310              		.syntax unified
 1311              		.code	16
 1312              		.thumb_func
 1313              		.fpu softvfp
 1315              	vprint:
 1316              	.LVL61:
 1317              	.LFB87:
 599:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 600:user_app/bsp_specific/smtc_bsp_mcu.c **** #else  // ie BSP_LOW_POWER_MODE == BSP_FEATURE_OFF
 601:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 602:user_app/bsp_specific/smtc_bsp_mcu.c **** static bool bsp_mcu_no_low_power_wait( const int32_t milliseconds )
 603:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 604:user_app/bsp_specific/smtc_bsp_mcu.c ****     uint32_t start_time = bsp_rtc_get_time_ms( );
 605:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 606:user_app/bsp_specific/smtc_bsp_mcu.c ****     while( bsp_rtc_get_time_ms( ) < ( start_time + milliseconds ) )
 607:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 608:user_app/bsp_specific/smtc_bsp_mcu.c ****         // interruptible wait for 10ms
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 43


 609:user_app/bsp_specific/smtc_bsp_mcu.c ****         HAL_Delay( 10 );
 610:user_app/bsp_specific/smtc_bsp_mcu.c ****         if( bsp_exit_wait == true )
 611:user_app/bsp_specific/smtc_bsp_mcu.c ****         {
 612:user_app/bsp_specific/smtc_bsp_mcu.c ****             // stop wait/lp function and return immediatly
 613:user_app/bsp_specific/smtc_bsp_mcu.c ****             bsp_exit_wait = false;
 614:user_app/bsp_specific/smtc_bsp_mcu.c ****             return true;
 615:user_app/bsp_specific/smtc_bsp_mcu.c ****         }
 616:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 617:user_app/bsp_specific/smtc_bsp_mcu.c ****     return false;
 618:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 619:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 620:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 621:user_app/bsp_specific/smtc_bsp_mcu.c **** #if( BSP_DBG_TRACE == BSP_FEATURE_ON )
 622:user_app/bsp_specific/smtc_bsp_mcu.c **** static void vprint( const char* fmt, va_list argp )
 623:user_app/bsp_specific/smtc_bsp_mcu.c **** {
 1318              		.loc 1 623 1 is_stmt 1 view -0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 256
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 624:user_app/bsp_specific/smtc_bsp_mcu.c ****     char string[BSP_PRINT_BUFFER_SIZE];
 1322              		.loc 1 624 5 view .LVU322
 625:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( 0 < vsprintf( string, fmt, argp ) )  // build string
 1323              		.loc 1 625 5 view .LVU323
 623:user_app/bsp_specific/smtc_bsp_mcu.c ****     char string[BSP_PRINT_BUFFER_SIZE];
 1324              		.loc 1 623 1 is_stmt 0 view .LVU324
 1325 0000 00B5     		push	{lr}
 1326              		.cfi_def_cfa_offset 4
 1327              		.cfi_offset 14, -4
 1328 0002 C1B0     		sub	sp, sp, #260
 1329              		.cfi_def_cfa_offset 264
 623:user_app/bsp_specific/smtc_bsp_mcu.c ****     char string[BSP_PRINT_BUFFER_SIZE];
 1330              		.loc 1 623 1 view .LVU325
 1331 0004 0A00     		movs	r2, r1
 1332              	.LVL62:
 1333              		.loc 1 625 13 view .LVU326
 1334 0006 0100     		movs	r1, r0
 1335 0008 6846     		mov	r0, sp
 1336              	.LVL63:
 1337              		.loc 1 625 13 view .LVU327
 1338 000a FFF7FEFF 		bl	vsprintf
 1339              	.LVL64:
 1340              		.loc 1 625 7 view .LVU328
 1341 000e 0028     		cmp	r0, #0
 1342 0010 06DD     		ble	.L55
 626:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 627:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_uart2_tx( ( uint8_t* ) string, strlen( string ) );
 1343              		.loc 1 627 9 is_stmt 1 view .LVU329
 1344              		.loc 1 627 44 is_stmt 0 view .LVU330
 1345 0012 6846     		mov	r0, sp
 1346 0014 FFF7FEFF 		bl	strlen
 1347              	.LVL65:
 1348              		.loc 1 627 9 view .LVU331
 1349 0018 C1B2     		uxtb	r1, r0
 1350 001a 6846     		mov	r0, sp
 1351 001c FFF7FEFF 		bl	bsp_uart2_tx
 1352              	.LVL66:
 1353              	.L55:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 44


 628:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 629:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1354              		.loc 1 629 1 view .LVU332
 1355 0020 41B0     		add	sp, sp, #260
 1356              		@ sp needed
 1357 0022 00BD     		pop	{pc}
 1358              		.cfi_endproc
 1359              	.LFE87:
 1361              		.section	.text.bsp_mcu_critical_section_begin,"ax",%progbits
 1362              		.align	1
 1363              		.global	bsp_mcu_critical_section_begin
 1364              		.syntax unified
 1365              		.code	16
 1366              		.thumb_func
 1367              		.fpu softvfp
 1369              	bsp_mcu_critical_section_begin:
 1370              	.LVL67:
 1371              	.LFB55:
 112:user_app/bsp_specific/smtc_bsp_mcu.c ****     *mask = __get_PRIMASK( );
 1372              		.loc 1 112 1 is_stmt 1 view -0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
 1376              		@ link register save eliminated.
 113:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 1377              		.loc 1 113 5 view .LVU334
 1378              	.LBB67:
 1379              	.LBI67:
 382:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1380              		.loc 2 382 31 view .LVU335
 1381              	.LBB68:
 384:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 1382              		.loc 2 384 3 view .LVU336
 386:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 1383              		.loc 2 386 3 view .LVU337
 1384              		.syntax divided
 1385              	@ 386 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1386 0000 EFF31083 		MRS r3, primask
 1387              	@ 0 "" 2
 1388              	.LVL68:
 387:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 1389              		.loc 2 387 3 view .LVU338
 387:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 1390              		.loc 2 387 3 is_stmt 0 view .LVU339
 1391              		.thumb
 1392              		.syntax unified
 1393              	.LBE68:
 1394              	.LBE67:
 113:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 1395              		.loc 1 113 11 view .LVU340
 1396 0004 0360     		str	r3, [r0]
 114:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1397              		.loc 1 114 5 is_stmt 1 view .LVU341
 1398              	.LBB69:
 1399              	.LBI69:
 140:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1400              		.loc 2 140 27 view .LVU342
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 45


 1401              	.LBB70:
 142:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 1402              		.loc 2 142 3 view .LVU343
 1403              		.syntax divided
 1404              	@ 142 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1405 0006 72B6     		cpsid i
 1406              	@ 0 "" 2
 1407              		.thumb
 1408              		.syntax unified
 1409              	.LBE70:
 1410              	.LBE69:
 115:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1411              		.loc 1 115 1 is_stmt 0 view .LVU344
 1412              		@ sp needed
 1413 0008 7047     		bx	lr
 1414              		.cfi_endproc
 1415              	.LFE55:
 1417              		.section	.text.bsp_mcu_critical_section_end,"ax",%progbits
 1418              		.align	1
 1419              		.global	bsp_mcu_critical_section_end
 1420              		.syntax unified
 1421              		.code	16
 1422              		.thumb_func
 1423              		.fpu softvfp
 1425              	bsp_mcu_critical_section_end:
 1426              	.LVL69:
 1427              	.LFB56:
 118:user_app/bsp_specific/smtc_bsp_mcu.c ****     __set_PRIMASK( *mask );
 1428              		.loc 1 118 1 is_stmt 1 view -0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 0
 1431              		@ frame_needed = 0, uses_anonymous_args = 0
 1432              		@ link register save eliminated.
 119:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1433              		.loc 1 119 5 view .LVU346
 1434              	.LBB71:
 1435              	.LBI71:
 412:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1436              		.loc 2 412 27 view .LVU347
 1437              	.LBB72:
 1438              		.loc 2 414 3 view .LVU348
 1439 0000 0368     		ldr	r3, [r0]
 1440              		.syntax divided
 1441              	@ 414 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1442 0002 83F31088 		MSR primask, r3
 1443              	@ 0 "" 2
 1444              	.LVL70:
 1445              		.loc 2 414 3 is_stmt 0 view .LVU349
 1446              		.thumb
 1447              		.syntax unified
 1448              	.LBE72:
 1449              	.LBE71:
 120:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1450              		.loc 1 120 1 view .LVU350
 1451              		@ sp needed
 1452 0006 7047     		bx	lr
 1453              		.cfi_endproc
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 46


 1454              	.LFE56:
 1456              		.section	.text.bsp_mcu_disable_periph_irq,"ax",%progbits
 1457              		.align	1
 1458              		.global	bsp_mcu_disable_periph_irq
 1459              		.syntax unified
 1460              		.code	16
 1461              		.thumb_func
 1462              		.fpu softvfp
 1464              	bsp_mcu_disable_periph_irq:
 1465              	.LFB57:
 123:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_irq_disable( );
 1466              		.loc 1 123 1 is_stmt 1 view -0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 124:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_tmr_irq_disable( );
 1470              		.loc 1 124 5 view .LVU352
 123:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_irq_disable( );
 1471              		.loc 1 123 1 is_stmt 0 view .LVU353
 1472 0000 10B5     		push	{r4, lr}
 1473              		.cfi_def_cfa_offset 8
 1474              		.cfi_offset 4, -8
 1475              		.cfi_offset 14, -4
 124:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_tmr_irq_disable( );
 1476              		.loc 1 124 5 view .LVU354
 1477 0002 FFF7FEFF 		bl	bsp_gpio_irq_disable
 1478              	.LVL71:
 125:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1479              		.loc 1 125 5 is_stmt 1 view .LVU355
 126:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1480              		.loc 1 126 1 is_stmt 0 view .LVU356
 1481              		@ sp needed
 125:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1482              		.loc 1 125 5 view .LVU357
 1483 0006 FFF7FEFF 		bl	bsp_tmr_irq_disable
 1484              	.LVL72:
 126:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1485              		.loc 1 126 1 view .LVU358
 1486 000a 10BD     		pop	{r4, pc}
 1487              		.cfi_endproc
 1488              	.LFE57:
 1490              		.section	.text.bsp_mcu_enable_periph_irq,"ax",%progbits
 1491              		.align	1
 1492              		.global	bsp_mcu_enable_periph_irq
 1493              		.syntax unified
 1494              		.code	16
 1495              		.thumb_func
 1496              		.fpu softvfp
 1498              	bsp_mcu_enable_periph_irq:
 1499              	.LFB58:
 129:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_irq_enable( );
 1500              		.loc 1 129 1 is_stmt 1 view -0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 0
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 130:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_tmr_irq_enable( );
 1504              		.loc 1 130 5 view .LVU360
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 47


 129:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_gpio_irq_enable( );
 1505              		.loc 1 129 1 is_stmt 0 view .LVU361
 1506 0000 10B5     		push	{r4, lr}
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 4, -8
 1509              		.cfi_offset 14, -4
 130:user_app/bsp_specific/smtc_bsp_mcu.c ****     bsp_tmr_irq_enable( );
 1510              		.loc 1 130 5 view .LVU362
 1511 0002 FFF7FEFF 		bl	bsp_gpio_irq_enable
 1512              	.LVL73:
 131:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1513              		.loc 1 131 5 is_stmt 1 view .LVU363
 132:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1514              		.loc 1 132 1 is_stmt 0 view .LVU364
 1515              		@ sp needed
 131:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1516              		.loc 1 131 5 view .LVU365
 1517 0006 FFF7FEFF 		bl	bsp_tmr_irq_enable
 1518              	.LVL74:
 132:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1519              		.loc 1 132 1 view .LVU366
 1520 000a 10BD     		pop	{r4, pc}
 1521              		.cfi_endproc
 1522              	.LFE58:
 1524              		.section	.text.bsp_disable_irq,"ax",%progbits
 1525              		.align	1
 1526              		.global	bsp_disable_irq
 1527              		.syntax unified
 1528              		.code	16
 1529              		.thumb_func
 1530              		.fpu softvfp
 1532              	bsp_disable_irq:
 1533              	.LFB60:
 173:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 1534              		.loc 1 173 1 is_stmt 1 view -0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
 1538              		@ link register save eliminated.
 174:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1539              		.loc 1 174 5 view .LVU368
 1540              	.LBB73:
 1541              	.LBI73:
 140:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1542              		.loc 2 140 27 view .LVU369
 1543              	.LBB74:
 142:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 1544              		.loc 2 142 3 view .LVU370
 1545              		.syntax divided
 1546              	@ 142 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1547 0000 72B6     		cpsid i
 1548              	@ 0 "" 2
 1549              		.thumb
 1550              		.syntax unified
 1551              	.LBE74:
 1552              	.LBE73:
 175:user_app/bsp_specific/smtc_bsp_mcu.c **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 48


 1553              		.loc 1 175 1 is_stmt 0 view .LVU371
 1554              		@ sp needed
 1555 0002 7047     		bx	lr
 1556              		.cfi_endproc
 1557              	.LFE60:
 1559              		.section	.text.bsp_enable_irq,"ax",%progbits
 1560              		.align	1
 1561              		.global	bsp_enable_irq
 1562              		.syntax unified
 1563              		.code	16
 1564              		.thumb_func
 1565              		.fpu softvfp
 1567              	bsp_enable_irq:
 1568              	.LFB61:
 178:user_app/bsp_specific/smtc_bsp_mcu.c ****     __enable_irq( );
 1569              		.loc 1 178 1 is_stmt 1 view -0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 179:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1574              		.loc 1 179 5 view .LVU373
 1575              	.LBB75:
 1576              	.LBI75:
 129:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1577              		.loc 2 129 27 view .LVU374
 1578              	.LBB76:
 131:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 1579              		.loc 2 131 3 view .LVU375
 1580              		.syntax divided
 1581              	@ 131 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1582 0000 62B6     		cpsie i
 1583              	@ 0 "" 2
 1584              		.thumb
 1585              		.syntax unified
 1586              	.LBE76:
 1587              	.LBE75:
 180:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1588              		.loc 1 180 1 is_stmt 0 view .LVU376
 1589              		@ sp needed
 1590 0002 7047     		bx	lr
 1591              		.cfi_endproc
 1592              	.LFE61:
 1594              		.section	.text.bsp_mcu_reset,"ax",%progbits
 1595              		.align	1
 1596              		.global	bsp_mcu_reset
 1597              		.syntax unified
 1598              		.code	16
 1599              		.thumb_func
 1600              		.fpu softvfp
 1602              	bsp_mcu_reset:
 1603              	.LFB62:
 183:user_app/bsp_specific/smtc_bsp_mcu.c ****     __disable_irq( );
 1604              		.loc 1 183 1 is_stmt 1 view -0
 1605              		.cfi_startproc
 1606              		@ Volatile: function does not return.
 1607              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 49


 1608              		@ frame_needed = 0, uses_anonymous_args = 0
 1609              		@ link register save eliminated.
 184:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1610              		.loc 1 184 5 view .LVU378
 1611              	.LBB85:
 1612              	.LBI85:
 140:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1613              		.loc 2 140 27 view .LVU379
 1614              	.LBB86:
 142:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 1615              		.loc 2 142 3 view .LVU380
 1616              		.syntax divided
 1617              	@ 142 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1618 0000 72B6     		cpsid i
 1619              	@ 0 "" 2
 1620              		.thumb
 1621              		.syntax unified
 1622              	.LBE86:
 1623              	.LBE85:
 187:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1624              		.loc 1 187 5 view .LVU381
 1625              	.LBB87:
 1626              	.LBI87:
 1627              		.file 3 "smtc_bsp/arm/cmsis/core_cm0plus.h"
   1:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**************************************************************************//**
   2:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * @version  V5.0.6
   5:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * @date     28. May 2018
   6:smtc_bsp/arm/cmsis/core_cm0plus.h ****  ******************************************************************************/
   7:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*
   8:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:smtc_bsp/arm/cmsis/core_cm0plus.h ****  *
  10:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * SPDX-License-Identifier: Apache-2.0
  11:smtc_bsp/arm/cmsis/core_cm0plus.h ****  *
  12:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * not use this file except in compliance with the License.
  14:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * You may obtain a copy of the License at
  15:smtc_bsp/arm/cmsis/core_cm0plus.h ****  *
  16:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:smtc_bsp/arm/cmsis/core_cm0plus.h ****  *
  18:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * Unless required by applicable law or agreed to in writing, software
  19:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * See the License for the specific language governing permissions and
  22:smtc_bsp/arm/cmsis/core_cm0plus.h ****  * limitations under the License.
  23:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
  24:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  25:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  26:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:smtc_bsp/arm/cmsis/core_cm0plus.h **** #elif defined (__clang__)
  28:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  29:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
  30:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  31:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  32:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  33:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 50


  34:smtc_bsp/arm/cmsis/core_cm0plus.h **** #include <stdint.h>
  35:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  36:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifdef __cplusplus
  37:smtc_bsp/arm/cmsis/core_cm0plus.h ****  extern "C" {
  38:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
  39:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  40:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
  41:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:smtc_bsp/arm/cmsis/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  44:smtc_bsp/arm/cmsis/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:smtc_bsp/arm/cmsis/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  46:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  47:smtc_bsp/arm/cmsis/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:smtc_bsp/arm/cmsis/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  49:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  50:smtc_bsp/arm/cmsis/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:smtc_bsp/arm/cmsis/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  52:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
  53:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  54:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  55:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*******************************************************************************
  56:smtc_bsp/arm/cmsis/core_cm0plus.h ****  *                 CMSIS definitions
  57:smtc_bsp/arm/cmsis/core_cm0plus.h ****  ******************************************************************************/
  58:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
  59:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup Cortex-M0+
  60:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
  61:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
  62:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  63:smtc_bsp/arm/cmsis/core_cm0plus.h **** #include "cmsis_version.h"
  64:smtc_bsp/arm/cmsis/core_cm0plus.h ****  
  65:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  66:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [3
  67:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (__CM_CMSIS_VERSION_SUB)                   /*!< \deprecated [1
  68:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  69:smtc_bsp/arm/cmsis/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           )  /*!< \deprecated CM
  70:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  71:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __CORTEX_M                   (0U)                                       /*!< Cortex-M Core 
  72:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  73:smtc_bsp/arm/cmsis/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:smtc_bsp/arm/cmsis/core_cm0plus.h ****     This core does not support an FPU at all
  75:smtc_bsp/arm/cmsis/core_cm0plus.h **** */
  76:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __FPU_USED       0U
  77:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  78:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if defined ( __CC_ARM )
  79:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
  80:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
  82:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  83:smtc_bsp/arm/cmsis/core_cm0plus.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #if defined __ARM_PCS_VFP
  85:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
  87:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  88:smtc_bsp/arm/cmsis/core_cm0plus.h **** #elif defined ( __GNUC__ )
  89:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 51


  91:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
  92:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  93:smtc_bsp/arm/cmsis/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  94:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #if defined __ARMVFP__
  95:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
  97:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
  98:smtc_bsp/arm/cmsis/core_cm0plus.h **** #elif defined ( __TI_ARM__ )
  99:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 100:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 102:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 103:smtc_bsp/arm/cmsis/core_cm0plus.h **** #elif defined ( __TASKING__ )
 104:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #if defined __FPU_VFP__
 105:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 107:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 108:smtc_bsp/arm/cmsis/core_cm0plus.h **** #elif defined ( __CSMC__ )
 109:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 110:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 112:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 113:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 114:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 115:smtc_bsp/arm/cmsis/core_cm0plus.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 117:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 118:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifdef __cplusplus
 119:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 120:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 121:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 122:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 123:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 124:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 125:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 126:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 127:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
 128:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 129:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifdef __cplusplus
 130:smtc_bsp/arm/cmsis/core_cm0plus.h ****  extern "C" {
 131:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 132:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 133:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* check device defines and use defaults */
 134:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 135:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 136:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 137:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 138:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 139:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 140:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 141:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 142:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 144:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 145:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
 146:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 147:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 52


 148:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 149:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 150:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 151:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
 152:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 153:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 154:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 155:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 156:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 157:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 158:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 159:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 160:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 161:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 162:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 163:smtc_bsp/arm/cmsis/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 164:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 165:smtc_bsp/arm/cmsis/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 166:smtc_bsp/arm/cmsis/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 167:smtc_bsp/arm/cmsis/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 168:smtc_bsp/arm/cmsis/core_cm0plus.h **** */
 169:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifdef __cplusplus
 170:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 171:smtc_bsp/arm/cmsis/core_cm0plus.h **** #else
 172:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 173:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 174:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 175:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 176:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 177:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* following defines should be used for structure members */
 178:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 179:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 180:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 181:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 182:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 183:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 184:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 185:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 186:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*******************************************************************************
 187:smtc_bsp/arm/cmsis/core_cm0plus.h ****  *                 Register Abstraction
 188:smtc_bsp/arm/cmsis/core_cm0plus.h ****   Core Register contain:
 189:smtc_bsp/arm/cmsis/core_cm0plus.h ****   - Core Register
 190:smtc_bsp/arm/cmsis/core_cm0plus.h ****   - Core NVIC Register
 191:smtc_bsp/arm/cmsis/core_cm0plus.h ****   - Core SCB Register
 192:smtc_bsp/arm/cmsis/core_cm0plus.h ****   - Core SysTick Register
 193:smtc_bsp/arm/cmsis/core_cm0plus.h ****   - Core MPU Register
 194:smtc_bsp/arm/cmsis/core_cm0plus.h ****  ******************************************************************************/
 195:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 196:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 197:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 198:smtc_bsp/arm/cmsis/core_cm0plus.h **** */
 199:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 200:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 201:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 202:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 203:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief      Core Register type definitions.
 204:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 53


 205:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 206:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 207:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 208:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 209:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 210:smtc_bsp/arm/cmsis/core_cm0plus.h **** typedef union
 211:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 212:smtc_bsp/arm/cmsis/core_cm0plus.h ****   struct
 213:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 214:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 215:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 216:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 217:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 218:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 219:smtc_bsp/arm/cmsis/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 220:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 221:smtc_bsp/arm/cmsis/core_cm0plus.h **** } APSR_Type;
 222:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 223:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* APSR Register Definitions */
 224:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 225:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 226:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 227:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 228:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 229:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 230:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 231:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 232:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 233:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 234:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 235:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 236:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 237:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 238:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 240:smtc_bsp/arm/cmsis/core_cm0plus.h **** typedef union
 241:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 242:smtc_bsp/arm/cmsis/core_cm0plus.h ****   struct
 243:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 244:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:smtc_bsp/arm/cmsis/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 247:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:smtc_bsp/arm/cmsis/core_cm0plus.h **** } IPSR_Type;
 249:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 250:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* IPSR Register Definitions */
 251:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 254:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 255:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 256:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 258:smtc_bsp/arm/cmsis/core_cm0plus.h **** typedef union
 259:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 260:smtc_bsp/arm/cmsis/core_cm0plus.h ****   struct
 261:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 54


 262:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 264:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 265:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 266:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 267:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 268:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 269:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 270:smtc_bsp/arm/cmsis/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 271:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 272:smtc_bsp/arm/cmsis/core_cm0plus.h **** } xPSR_Type;
 273:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 274:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* xPSR Register Definitions */
 275:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 276:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 277:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 278:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 279:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 280:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 281:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 282:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 283:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 284:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 285:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 286:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 287:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 288:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 289:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 290:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 291:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 292:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 293:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 294:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 295:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 296:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 297:smtc_bsp/arm/cmsis/core_cm0plus.h **** typedef union
 298:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 299:smtc_bsp/arm/cmsis/core_cm0plus.h ****   struct
 300:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 301:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 302:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 303:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 304:smtc_bsp/arm/cmsis/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 305:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:smtc_bsp/arm/cmsis/core_cm0plus.h **** } CONTROL_Type;
 307:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 308:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* CONTROL Register Definitions */
 309:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 310:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 311:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 312:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 313:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 314:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 315:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 316:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 317:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 318:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 55


 319:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 320:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 321:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 322:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
 323:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 324:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 325:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 326:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 327:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 328:smtc_bsp/arm/cmsis/core_cm0plus.h **** typedef struct
 329:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 330:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 331:smtc_bsp/arm/cmsis/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 332:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 333:smtc_bsp/arm/cmsis/core_cm0plus.h ****         uint32_t RSERVED1[31U];
 334:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 335:smtc_bsp/arm/cmsis/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 336:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 337:smtc_bsp/arm/cmsis/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 338:smtc_bsp/arm/cmsis/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 339:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 340:smtc_bsp/arm/cmsis/core_cm0plus.h **** }  NVIC_Type;
 341:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 342:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
 343:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 344:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 345:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 346:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 347:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 348:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 349:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
 350:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 351:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 352:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 353:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 354:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 355:smtc_bsp/arm/cmsis/core_cm0plus.h **** typedef struct
 356:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 357:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 358:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 359:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 360:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 361:smtc_bsp/arm/cmsis/core_cm0plus.h **** #else
 362:smtc_bsp/arm/cmsis/core_cm0plus.h ****         uint32_t RESERVED0;
 363:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 364:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 365:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 366:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 367:smtc_bsp/arm/cmsis/core_cm0plus.h ****         uint32_t RESERVED1;
 368:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 369:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 370:smtc_bsp/arm/cmsis/core_cm0plus.h **** } SCB_Type;
 371:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 372:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 373:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 374:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 375:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 56


 376:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 377:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 378:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 379:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 380:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 381:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 382:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 383:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 384:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 385:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 386:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 387:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 388:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 389:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 390:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 391:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 392:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 393:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 394:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 395:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 396:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 397:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 398:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 399:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 400:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 401:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 402:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 403:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 404:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 405:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 406:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 407:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 408:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 409:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 410:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 411:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 412:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 413:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 414:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 415:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 416:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 417:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 418:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 419:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 420:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 421:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 422:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 423:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 424:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 425:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 426:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 427:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 428:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 429:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 430:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 431:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 432:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 57


 433:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 434:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 435:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 436:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 437:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 438:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SCB System Control Register Definitions */
 439:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 440:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 441:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 442:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 443:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 444:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 445:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 446:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 447:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 448:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 449:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 450:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 451:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 452:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 453:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 454:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 455:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 456:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 457:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 458:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 459:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 460:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 461:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 462:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 463:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 464:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 465:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 466:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
 467:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 468:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 469:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 470:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 471:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 472:smtc_bsp/arm/cmsis/core_cm0plus.h **** typedef struct
 473:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 474:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 475:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 476:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 477:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 478:smtc_bsp/arm/cmsis/core_cm0plus.h **** } SysTick_Type;
 479:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 480:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 481:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 482:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 483:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 484:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 485:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 486:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 487:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 488:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 489:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 58


 490:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 491:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 492:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 493:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SysTick Reload Register Definitions */
 494:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 495:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 496:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 497:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SysTick Current Register Definitions */
 498:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 499:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 500:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 501:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 502:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 503:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 504:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 505:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 506:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 507:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 508:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 509:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 510:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 511:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 512:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 513:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 514:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 515:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 516:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 517:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 518:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
 519:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 520:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 521:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 522:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 523:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 524:smtc_bsp/arm/cmsis/core_cm0plus.h **** typedef struct
 525:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 526:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 527:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 528:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 529:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 530:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 531:smtc_bsp/arm/cmsis/core_cm0plus.h **** } MPU_Type;
 532:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 533:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_TYPE_RALIASES                  1U
 534:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 535:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* MPU Type Register Definitions */
 536:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 537:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 538:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 539:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 540:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 541:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 542:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 543:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 544:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 545:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* MPU Control Register Definitions */
 546:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 59


 547:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 548:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 549:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 550:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 551:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 552:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 553:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 554:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 555:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 556:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 557:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 558:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 559:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 560:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 561:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 562:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 563:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 564:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 565:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 566:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 567:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 568:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 569:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 570:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 571:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 572:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 573:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 574:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 575:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 576:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 577:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 578:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 579:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 580:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 581:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 582:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 583:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 584:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 585:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 586:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 587:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 588:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 589:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 590:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 591:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 592:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 593:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 594:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 595:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 596:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 597:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 598:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 599:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 600:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 601:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 602:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 603:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 60


 604:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 605:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 606:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 607:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
 608:smtc_bsp/arm/cmsis/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 609:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
 610:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 611:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 612:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 613:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 614:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 615:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 616:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 617:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 618:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
 619:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 620:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 621:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 622:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 623:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 624:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 625:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return           Masked and shifted value.
 626:smtc_bsp/arm/cmsis/core_cm0plus.h **** */
 627:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 628:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 629:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 630:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 631:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 632:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 633:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 634:smtc_bsp/arm/cmsis/core_cm0plus.h **** */
 635:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 636:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 637:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 638:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 639:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 640:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 641:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 642:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 643:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 644:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
 645:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 646:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 647:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* Memory mapping of Core Hardware */
 648:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 649:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 650:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 651:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 652:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 653:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 654:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 655:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 656:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 657:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 658:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 659:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 660:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 61


 661:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 662:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*@} */
 663:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 664:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 665:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 666:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*******************************************************************************
 667:smtc_bsp/arm/cmsis/core_cm0plus.h ****  *                Hardware Abstraction Layer
 668:smtc_bsp/arm/cmsis/core_cm0plus.h ****   Core Function Interface contains:
 669:smtc_bsp/arm/cmsis/core_cm0plus.h ****   - Core NVIC Functions
 670:smtc_bsp/arm/cmsis/core_cm0plus.h ****   - Core SysTick Functions
 671:smtc_bsp/arm/cmsis/core_cm0plus.h ****   - Core Register Access Functions
 672:smtc_bsp/arm/cmsis/core_cm0plus.h ****  ******************************************************************************/
 673:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 674:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 675:smtc_bsp/arm/cmsis/core_cm0plus.h **** */
 676:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 677:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 678:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 679:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 680:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 681:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 682:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 683:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 684:smtc_bsp/arm/cmsis/core_cm0plus.h ****   @{
 685:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 686:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 687:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifdef CMSIS_NVIC_VIRTUAL
 688:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 689:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 690:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 691:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 692:smtc_bsp/arm/cmsis/core_cm0plus.h **** #else
 693:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 694:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 695:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 696:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 697:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 698:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 699:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 700:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 701:smtc_bsp/arm/cmsis/core_cm0plus.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0+ */
 702:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 703:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 704:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 705:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 706:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 707:smtc_bsp/arm/cmsis/core_cm0plus.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 708:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 709:smtc_bsp/arm/cmsis/core_cm0plus.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 710:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #endif
 711:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 712:smtc_bsp/arm/cmsis/core_cm0plus.h **** #else
 713:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_SetVector              __NVIC_SetVector
 714:smtc_bsp/arm/cmsis/core_cm0plus.h ****   #define NVIC_GetVector              __NVIC_GetVector
 715:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 716:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 717:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define NVIC_USER_IRQ_OFFSET          16
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 62


 718:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 719:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 720:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 721:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 722:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 723:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 724:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 725:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 726:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 727:smtc_bsp/arm/cmsis/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 728:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 729:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 730:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 731:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 732:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 733:smtc_bsp/arm/cmsis/core_cm0plus.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 734:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 735:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 736:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Enable Interrupt
 737:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 738:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 739:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \note    IRQn must not be negative.
 740:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 741:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 742:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 743:smtc_bsp/arm/cmsis/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 744:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 745:smtc_bsp/arm/cmsis/core_cm0plus.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 746:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 747:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 748:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 749:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 750:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 751:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Get Interrupt Enable status
 752:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 753:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 754:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return             0  Interrupt is not enabled.
 755:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return             1  Interrupt is enabled.
 756:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \note    IRQn must not be negative.
 757:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 758:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 759:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 760:smtc_bsp/arm/cmsis/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 761:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 762:smtc_bsp/arm/cmsis/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 763:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 764:smtc_bsp/arm/cmsis/core_cm0plus.h ****   else
 765:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 766:smtc_bsp/arm/cmsis/core_cm0plus.h ****     return(0U);
 767:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 768:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 769:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 770:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 771:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 772:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Disable Interrupt
 773:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 774:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 63


 775:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \note    IRQn must not be negative.
 776:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 777:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 778:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 779:smtc_bsp/arm/cmsis/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 780:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 781:smtc_bsp/arm/cmsis/core_cm0plus.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 782:smtc_bsp/arm/cmsis/core_cm0plus.h ****     __DSB();
 783:smtc_bsp/arm/cmsis/core_cm0plus.h ****     __ISB();
 784:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 785:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 786:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 787:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 788:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 789:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Get Pending Interrupt
 790:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 791:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 792:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return             0  Interrupt status is not pending.
 793:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return             1  Interrupt status is pending.
 794:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \note    IRQn must not be negative.
 795:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 796:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 797:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 798:smtc_bsp/arm/cmsis/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 799:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 800:smtc_bsp/arm/cmsis/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 801:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 802:smtc_bsp/arm/cmsis/core_cm0plus.h ****   else
 803:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 804:smtc_bsp/arm/cmsis/core_cm0plus.h ****     return(0U);
 805:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 806:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 807:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 808:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 809:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 810:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Set Pending Interrupt
 811:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 812:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 813:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \note    IRQn must not be negative.
 814:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 815:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 816:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 817:smtc_bsp/arm/cmsis/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 818:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 819:smtc_bsp/arm/cmsis/core_cm0plus.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 820:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 821:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 822:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 823:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 824:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 825:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Clear Pending Interrupt
 826:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 827:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 828:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \note    IRQn must not be negative.
 829:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 830:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 831:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 64


 832:smtc_bsp/arm/cmsis/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 833:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 834:smtc_bsp/arm/cmsis/core_cm0plus.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 835:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 836:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 837:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 838:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 839:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 840:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Set Interrupt Priority
 841:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 842:smtc_bsp/arm/cmsis/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 843:smtc_bsp/arm/cmsis/core_cm0plus.h ****            or negative to specify a processor exception.
 844:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 845:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]  priority  Priority to set.
 846:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \note    The priority cannot be set for every processor exception.
 847:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 848:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 849:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 850:smtc_bsp/arm/cmsis/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 851:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 852:smtc_bsp/arm/cmsis/core_cm0plus.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 853:smtc_bsp/arm/cmsis/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 854:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 855:smtc_bsp/arm/cmsis/core_cm0plus.h ****   else
 856:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 857:smtc_bsp/arm/cmsis/core_cm0plus.h ****     SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))
 858:smtc_bsp/arm/cmsis/core_cm0plus.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 859:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 860:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 861:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 862:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 863:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 864:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Get Interrupt Priority
 865:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
 866:smtc_bsp/arm/cmsis/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 867:smtc_bsp/arm/cmsis/core_cm0plus.h ****            or negative to specify a processor exception.
 868:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]   IRQn  Interrupt number.
 869:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return             Interrupt Priority.
 870:smtc_bsp/arm/cmsis/core_cm0plus.h ****                       Value is aligned automatically to the implemented priority bits of the microc
 871:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 872:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
 873:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 874:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 875:smtc_bsp/arm/cmsis/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 876:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 877:smtc_bsp/arm/cmsis/core_cm0plus.h ****     return((uint32_t)(((NVIC->IP[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 878:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 879:smtc_bsp/arm/cmsis/core_cm0plus.h ****   else
 880:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 881:smtc_bsp/arm/cmsis/core_cm0plus.h ****     return((uint32_t)(((SCB->SHP[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U -
 882:smtc_bsp/arm/cmsis/core_cm0plus.h ****   }
 883:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 884:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 885:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 886:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 887:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Encode Priority
 888:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Encodes the priority for an interrupt with the given priority group,
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 65


 889:smtc_bsp/arm/cmsis/core_cm0plus.h ****            preemptive priority value, and subpriority value.
 890:smtc_bsp/arm/cmsis/core_cm0plus.h ****            In case of a conflict between priority grouping and available
 891:smtc_bsp/arm/cmsis/core_cm0plus.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
 892:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]     PriorityGroup  Used priority group.
 893:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
 894:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
 895:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
 896:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 897:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 898:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 899:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 900:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t PreemptPriorityBits;
 901:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t SubPriorityBits;
 902:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 903:smtc_bsp/arm/cmsis/core_cm0plus.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 904:smtc_bsp/arm/cmsis/core_cm0plus.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 905:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 906:smtc_bsp/arm/cmsis/core_cm0plus.h ****   return (
 907:smtc_bsp/arm/cmsis/core_cm0plus.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 908:smtc_bsp/arm/cmsis/core_cm0plus.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 909:smtc_bsp/arm/cmsis/core_cm0plus.h ****          );
 910:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 911:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 912:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 913:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 914:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Decode Priority
 915:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Decodes an interrupt priority value with a given priority group to
 916:smtc_bsp/arm/cmsis/core_cm0plus.h ****            preemptive priority value and subpriority value.
 917:smtc_bsp/arm/cmsis/core_cm0plus.h ****            In case of a conflict between priority grouping and available
 918:smtc_bsp/arm/cmsis/core_cm0plus.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
 919:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
 920:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]     PriorityGroup  Used priority group.
 921:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
 922:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
 923:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 924:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
 925:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 926:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 927:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t PreemptPriorityBits;
 928:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t SubPriorityBits;
 929:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 930:smtc_bsp/arm/cmsis/core_cm0plus.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 931:smtc_bsp/arm/cmsis/core_cm0plus.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 932:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 933:smtc_bsp/arm/cmsis/core_cm0plus.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 934:smtc_bsp/arm/cmsis/core_cm0plus.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 935:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 936:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 937:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 938:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 939:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Set Interrupt Vector
 940:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
 941:smtc_bsp/arm/cmsis/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 942:smtc_bsp/arm/cmsis/core_cm0plus.h ****            or negative to specify a processor exception.
 943:smtc_bsp/arm/cmsis/core_cm0plus.h ****            VTOR must been relocated to SRAM before.
 944:smtc_bsp/arm/cmsis/core_cm0plus.h ****            If VTOR is not present address 0 must be mapped to SRAM.
 945:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]   IRQn      Interrupt number
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 66


 946:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]   vector    Address of interrupt handler function
 947:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 948:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
 949:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 950:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 951:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
 952:smtc_bsp/arm/cmsis/core_cm0plus.h **** #else
 953:smtc_bsp/arm/cmsis/core_cm0plus.h ****     uint32_t *vectors = (uint32_t *)0x0U;
 954:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 955:smtc_bsp/arm/cmsis/core_cm0plus.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
 956:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 957:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 958:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 959:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 960:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   Get Interrupt Vector
 961:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Reads an interrupt vector from interrupt vector table.
 962:smtc_bsp/arm/cmsis/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 963:smtc_bsp/arm/cmsis/core_cm0plus.h ****            or negative to specify a processor exception.
 964:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \param [in]   IRQn      Interrupt number.
 965:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \return                 Address of interrupt handler function
 966:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 967:smtc_bsp/arm/cmsis/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
 968:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 969:smtc_bsp/arm/cmsis/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 970:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
 971:smtc_bsp/arm/cmsis/core_cm0plus.h **** #else
 972:smtc_bsp/arm/cmsis/core_cm0plus.h ****   uint32_t *vectors = (uint32_t *)0x0U;
 973:smtc_bsp/arm/cmsis/core_cm0plus.h **** #endif
 974:smtc_bsp/arm/cmsis/core_cm0plus.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
 975:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 976:smtc_bsp/arm/cmsis/core_cm0plus.h **** }
 977:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 978:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 979:smtc_bsp/arm/cmsis/core_cm0plus.h **** /**
 980:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \brief   System Reset
 981:smtc_bsp/arm/cmsis/core_cm0plus.h ****   \details Initiates a system reset request to reset the MCU.
 982:smtc_bsp/arm/cmsis/core_cm0plus.h ****  */
 983:smtc_bsp/arm/cmsis/core_cm0plus.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 1628              		.loc 3 983 34 view .LVU382
 1629              	.LBB88:
 984:smtc_bsp/arm/cmsis/core_cm0plus.h **** {
 985:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __DSB();                                                          /* Ensure all outstanding memor
 1630              		.loc 3 985 3 view .LVU383
 1631              	.LBB89:
 1632              	.LBI89:
 415:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 416:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 417:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 418:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 420:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 424:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 426:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 67


 427:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 428:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 429:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 430:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 431:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:smtc_bsp/arm/cmsis/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:smtc_bsp/arm/cmsis/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 435:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Enable FIQ
 436:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 439:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 441:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 443:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 444:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 445:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 446:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Disable FIQ
 447:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 450:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 452:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 454:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 455:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 456:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 457:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Base Priority
 458:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               Base Priority register value
 460:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 461:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 463:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 464:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 465:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 467:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 468:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 469:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 470:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 472:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               Base Priority register value
 475:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 476:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 478:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 479:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 480:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 482:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 483:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 68


 484:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 485:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 486:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 487:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority
 488:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 491:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 493:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 495:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 496:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 497:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 499:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 503:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 505:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 507:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 508:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 509:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 510:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 511:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 516:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 518:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 520:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 521:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 522:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 523:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               Fault Mask register value
 526:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 527:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 529:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 530:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 531:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 533:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 534:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 535:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 536:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 538:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 69


 541:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 542:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 544:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 545:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 546:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 548:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 549:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 550:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 551:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 552:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 553:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 557:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 559:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 561:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 562:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 563:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 565:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 569:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 571:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 573:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 574:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 575:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 579:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 580:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:smtc_bsp/arm/cmsis/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 583:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 584:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   mode.
 588:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   
 589:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 592:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 594:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:smtc_bsp/arm/cmsis/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:smtc_bsp/arm/cmsis/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return 0U;
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 70


 598:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 599:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 600:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return result;
 602:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 603:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 604:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 605:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 607:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 611:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 614:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 616:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return 0U;
 619:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 620:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 621:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return result;
 623:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 624:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 625:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 626:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 627:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 628:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 629:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   mode.
 633:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   
 634:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 637:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 639:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:smtc_bsp/arm/cmsis/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 644:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 646:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 647:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 648:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 649:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 651:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 71


 655:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 658:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 660:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 664:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 666:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 667:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 668:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 669:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 670:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 671:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   mode.
 675:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 676:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 679:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 681:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:smtc_bsp/arm/cmsis/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return 0U;
 685:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 686:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 687:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return result;
 689:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 690:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 691:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 692:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 693:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 695:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 699:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 702:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 704:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return 0U;
 707:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 708:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 709:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return result;
 711:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 72


 712:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 713:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 714:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 715:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 716:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 717:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   mode.
 721:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 722:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 725:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 727:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:smtc_bsp/arm/cmsis/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 732:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 734:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 735:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 736:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 737:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 739:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 743:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 746:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 748:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 752:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 754:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 755:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 756:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 757:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 760:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 761:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 762:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Get FPSCR
 763:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 766:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 768:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 73


 769:smtc_bsp/arm/cmsis/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:smtc_bsp/arm/cmsis/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:smtc_bsp/arm/cmsis/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 776:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   uint32_t result;
 777:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 778:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(result);
 780:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 781:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 782:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   return(0U);
 783:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 784:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 785:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 786:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 787:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 788:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Set FPSCR
 789:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 792:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 794:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:smtc_bsp/arm/cmsis/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:smtc_bsp/arm/cmsis/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:smtc_bsp/arm/cmsis/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 802:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 804:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 805:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   (void)fpscr;
 806:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 807:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 808:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 809:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 810:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 812:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 813:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   Access to dedicated instructions
 816:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   @{
 817:smtc_bsp/arm/cmsis/cmsis_gcc.h **** */
 818:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 819:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 74


 826:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #else
 827:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #endif
 831:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 832:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 833:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   No Operation
 834:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 836:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 838:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 839:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 842:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 844:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 845:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 846:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Wait For Event
 847:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 850:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 852:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 853:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 854:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Send Event
 855:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 857:smtc_bsp/arm/cmsis/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 859:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 860:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 861:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            after the instruction has been completed.
 865:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 866:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 868:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:smtc_bsp/arm/cmsis/cmsis_gcc.h **** }
 870:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 871:smtc_bsp/arm/cmsis/cmsis_gcc.h **** 
 872:smtc_bsp/arm/cmsis/cmsis_gcc.h **** /**
 873:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:smtc_bsp/arm/cmsis/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:smtc_bsp/arm/cmsis/cmsis_gcc.h ****  */
 877:smtc_bsp/arm/cmsis/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1633              		.loc 2 877 27 view .LVU384
 1634              	.LBB90:
 878:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 879:smtc_bsp/arm/cmsis/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1635              		.loc 2 879 3 view .LVU385
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 75


 1636              		.syntax divided
 1637              	@ 879 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1638 0002 BFF34F8F 		dsb 0xF
 1639              	@ 0 "" 2
 1640              		.thumb
 1641              		.syntax unified
 1642              	.LBE90:
 1643              	.LBE89:
 986:smtc_bsp/arm/cmsis/core_cm0plus.h ****                                                                        buffered write are completed
 987:smtc_bsp/arm/cmsis/core_cm0plus.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 1644              		.loc 3 987 3 view .LVU386
 1645              		.loc 3 987 15 is_stmt 0 view .LVU387
 1646 0006 034B     		ldr	r3, .L65
 1647 0008 034A     		ldr	r2, .L65+4
 1648 000a DA60     		str	r2, [r3, #12]
 988:smtc_bsp/arm/cmsis/core_cm0plus.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
 989:smtc_bsp/arm/cmsis/core_cm0plus.h ****   __DSB();                                                          /* Ensure completion of memory 
 1649              		.loc 3 989 3 is_stmt 1 view .LVU388
 1650              	.LBB91:
 1651              	.LBI91:
 877:smtc_bsp/arm/cmsis/cmsis_gcc.h **** {
 1652              		.loc 2 877 27 view .LVU389
 1653              	.LBB92:
 1654              		.loc 2 879 3 view .LVU390
 1655              		.syntax divided
 1656              	@ 879 "smtc_bsp/arm/cmsis/cmsis_gcc.h" 1
 1657 000c BFF34F8F 		dsb 0xF
 1658              	@ 0 "" 2
 1659              		.thumb
 1660              		.syntax unified
 1661              	.L64:
 1662              	.LBE92:
 1663              	.LBE91:
 990:smtc_bsp/arm/cmsis/core_cm0plus.h **** 
 991:smtc_bsp/arm/cmsis/core_cm0plus.h ****   for(;;)                                                           /* wait until reset */
 1664              		.loc 3 991 3 view .LVU391
 992:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 993:smtc_bsp/arm/cmsis/core_cm0plus.h ****     __NOP();
 1665              		.loc 3 993 5 view .LVU392
 1666              		.syntax divided
 1667              	@ 993 "smtc_bsp/arm/cmsis/core_cm0plus.h" 1
 1668 0010 C046     		nop
 1669              	@ 0 "" 2
 991:smtc_bsp/arm/cmsis/core_cm0plus.h ****   {
 1670              		.loc 3 991 8 view .LVU393
 1671              		.thumb
 1672              		.syntax unified
 1673 0012 FDE7     		b	.L64
 1674              	.L66:
 1675              		.align	2
 1676              	.L65:
 1677 0014 00ED00E0 		.word	-536810240
 1678 0018 0400FA05 		.word	100270084
 1679              	.LBE88:
 1680              	.LBE87:
 1681              		.cfi_endproc
 1682              	.LFE62:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 76


 1684              		.section	.text.bsp_mcu_modem_need_reset,"ax",%progbits
 1685              		.align	1
 1686              		.global	bsp_mcu_modem_need_reset
 1687              		.syntax unified
 1688              		.code	16
 1689              		.thumb_func
 1690              		.fpu softvfp
 1692              	bsp_mcu_modem_need_reset:
 1693              	.LFB89:
 1694              		.cfi_startproc
 1695              		@ Volatile: function does not return.
 1696              		@ args = 0, pretend = 0, frame = 0
 1697              		@ frame_needed = 0, uses_anonymous_args = 0
 1698 0000 10B5     		push	{r4, lr}
 1699              		.cfi_def_cfa_offset 8
 1700              		.cfi_offset 4, -8
 1701              		.cfi_offset 14, -4
 1702 0002 FFF7FEFF 		bl	bsp_mcu_reset
 1703              		.cfi_endproc
 1704              	.LFE89:
 1706              		.section	.text.bsp_mcu_panic,"ax",%progbits
 1707              		.align	1
 1708              		.global	bsp_mcu_panic
 1709              		.syntax unified
 1710              		.code	16
 1711              		.thumb_func
 1712              		.fpu softvfp
 1714              	bsp_mcu_panic:
 1715              	.LFB63:
 191:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 1716              		.loc 1 191 1 view -0
 1717              		.cfi_startproc
 1718              		@ Volatile: function does not return.
 1719              		@ args = 0, pretend = 0, frame = 8
 1720              		@ frame_needed = 0, uses_anonymous_args = 0
 192:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1721              		.loc 1 192 5 view .LVU395
 192:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1722              		.loc 1 192 5 view .LVU396
 191:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 1723              		.loc 1 191 1 is_stmt 0 view .LVU397
 1724 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1725              		.cfi_def_cfa_offset 24
 1726              		.cfi_offset 0, -24
 1727              		.cfi_offset 1, -20
 1728              		.cfi_offset 4, -16
 1729              		.cfi_offset 5, -12
 1730              		.cfi_offset 6, -8
 1731              		.cfi_offset 14, -4
 192:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1732              		.loc 1 192 5 view .LVU398
 1733 0002 01A8     		add	r0, sp, #4
 1734 0004 FFF7FEFF 		bl	bsp_mcu_critical_section_begin
 1735              	.LVL75:
 194:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "PANIC" );
 1736              		.loc 1 194 5 is_stmt 1 view .LVU399
 194:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "PANIC" );
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 77


 1737              		.loc 1 194 5 view .LVU400
 1738 0008 104C     		ldr	r4, .L70
 1739 000a 2600     		movs	r6, r4
 1740 000c 2000     		movs	r0, r4
 1741 000e 0836     		adds	r6, r6, #8
 1742 0010 FFF7FEFF 		bl	bsp_trace_print
 1743              	.LVL76:
 194:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "PANIC" );
 1744              		.loc 1 194 5 view .LVU401
 1745 0014 3000     		movs	r0, r6
 1746 0016 FFF7FEFF 		bl	bsp_trace_print
 1747              	.LVL77:
 194:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "PANIC" );
 1748              		.loc 1 194 5 view .LVU402
 1749 001a 2500     		movs	r5, r4
 1750 001c 2000     		movs	r0, r4
 1751 001e 0C49     		ldr	r1, .L70+4
 1752 0020 1030     		adds	r0, r0, #16
 1753 0022 1435     		adds	r5, r5, #20
 1754 0024 FFF7FEFF 		bl	bsp_trace_print
 1755              	.LVL78:
 194:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "PANIC" );
 1756              		.loc 1 194 5 view .LVU403
 1757 0028 2800     		movs	r0, r5
 1758 002a FFF7FEFF 		bl	bsp_trace_print
 1759              	.LVL79:
 194:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "PANIC" );
 1760              		.loc 1 194 5 view .LVU404
 194:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "PANIC" );
 1761              		.loc 1 194 44 view .LVU405
 195:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1762              		.loc 1 195 5 view .LVU406
 195:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1763              		.loc 1 195 5 view .LVU407
 1764 002e 2000     		movs	r0, r4
 1765 0030 FFF7FEFF 		bl	bsp_trace_print
 1766              	.LVL80:
 195:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1767              		.loc 1 195 5 view .LVU408
 1768 0034 3000     		movs	r0, r6
 1769 0036 FFF7FEFF 		bl	bsp_trace_print
 1770              	.LVL81:
 195:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1771              		.loc 1 195 5 view .LVU409
 1772 003a 2000     		movs	r0, r4
 1773 003c 1930     		adds	r0, r0, #25
 1774 003e FFF7FEFF 		bl	bsp_trace_print
 1775              	.LVL82:
 195:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1776              		.loc 1 195 5 view .LVU410
 1777 0042 2800     		movs	r0, r5
 1778 0044 FFF7FEFF 		bl	bsp_trace_print
 1779              	.LVL83:
 1780              	.L69:
 195:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1781              		.loc 1 195 5 discriminator 1 view .LVU411
 195:user_app/bsp_specific/smtc_bsp_mcu.c **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 78


 1782              		.loc 1 195 35 discriminator 1 view .LVU412
 197:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1783              		.loc 1 197 5 discriminator 1 view .LVU413
 199:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1784              		.loc 1 199 5 discriminator 1 view .LVU414
 197:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1785              		.loc 1 197 10 discriminator 1 view .LVU415
 1786 0048 FEE7     		b	.L69
 1787              	.L71:
 1788 004a C046     		.align	2
 1789              	.L70:
 1790 004c 00000000 		.word	.LANCHOR2
 1791 0050 00000000 		.word	.LANCHOR3
 1792              		.cfi_endproc
 1793              	.LFE63:
 1795              		.section	.text.bsp_mcu_handle_lr1mac_issue,"ax",%progbits
 1796              		.align	1
 1797              		.global	bsp_mcu_handle_lr1mac_issue
 1798              		.syntax unified
 1799              		.code	16
 1800              		.thumb_func
 1801              		.fpu softvfp
 1803              	bsp_mcu_handle_lr1mac_issue:
 1804              	.LFB64:
 203:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 1805              		.loc 1 203 1 view -0
 1806              		.cfi_startproc
 1807              		@ Volatile: function does not return.
 1808              		@ args = 0, pretend = 0, frame = 8
 1809              		@ frame_needed = 0, uses_anonymous_args = 0
 204:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "%s\n", __func__ );
 1810              		.loc 1 204 5 view .LVU417
 204:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "%s\n", __func__ );
 1811              		.loc 1 204 5 view .LVU418
 203:user_app/bsp_specific/smtc_bsp_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 1812              		.loc 1 203 1 is_stmt 0 view .LVU419
 1813 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 1814              		.cfi_def_cfa_offset 24
 1815              		.cfi_offset 0, -24
 1816              		.cfi_offset 1, -20
 1817              		.cfi_offset 4, -16
 1818              		.cfi_offset 5, -12
 1819              		.cfi_offset 6, -8
 1820              		.cfi_offset 14, -4
 204:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "%s\n", __func__ );
 1821              		.loc 1 204 5 view .LVU420
 1822 0002 01A8     		add	r0, sp, #4
 1823 0004 FFF7FEFF 		bl	bsp_mcu_critical_section_begin
 1824              	.LVL84:
 205:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "LR1MAC PANIC" );
 1825              		.loc 1 205 5 is_stmt 1 view .LVU421
 205:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "LR1MAC PANIC" );
 1826              		.loc 1 205 5 view .LVU422
 1827 0008 104C     		ldr	r4, .L74
 1828 000a 2600     		movs	r6, r4
 1829 000c 2000     		movs	r0, r4
 1830 000e 0836     		adds	r6, r6, #8
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 79


 1831 0010 FFF7FEFF 		bl	bsp_trace_print
 1832              	.LVL85:
 205:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "LR1MAC PANIC" );
 1833              		.loc 1 205 5 view .LVU423
 1834 0014 3000     		movs	r0, r6
 1835 0016 FFF7FEFF 		bl	bsp_trace_print
 1836              	.LVL86:
 205:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "LR1MAC PANIC" );
 1837              		.loc 1 205 5 view .LVU424
 1838 001a 2500     		movs	r5, r4
 1839 001c 2000     		movs	r0, r4
 1840 001e 0C49     		ldr	r1, .L74+4
 1841 0020 1030     		adds	r0, r0, #16
 1842 0022 1435     		adds	r5, r5, #20
 1843 0024 FFF7FEFF 		bl	bsp_trace_print
 1844              	.LVL87:
 205:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "LR1MAC PANIC" );
 1845              		.loc 1 205 5 view .LVU425
 1846 0028 2800     		movs	r0, r5
 1847 002a FFF7FEFF 		bl	bsp_trace_print
 1848              	.LVL88:
 205:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "LR1MAC PANIC" );
 1849              		.loc 1 205 5 view .LVU426
 205:user_app/bsp_specific/smtc_bsp_mcu.c ****     BSP_DBG_TRACE_ERROR( "LR1MAC PANIC" );
 1850              		.loc 1 205 44 view .LVU427
 206:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1851              		.loc 1 206 5 view .LVU428
 206:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1852              		.loc 1 206 5 view .LVU429
 1853 002e 2000     		movs	r0, r4
 1854 0030 FFF7FEFF 		bl	bsp_trace_print
 1855              	.LVL89:
 206:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1856              		.loc 1 206 5 view .LVU430
 1857 0034 3000     		movs	r0, r6
 1858 0036 FFF7FEFF 		bl	bsp_trace_print
 1859              	.LVL90:
 206:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1860              		.loc 1 206 5 view .LVU431
 1861 003a 2000     		movs	r0, r4
 1862 003c 1F30     		adds	r0, r0, #31
 1863 003e FFF7FEFF 		bl	bsp_trace_print
 1864              	.LVL91:
 206:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1865              		.loc 1 206 5 view .LVU432
 1866 0042 2800     		movs	r0, r5
 1867 0044 FFF7FEFF 		bl	bsp_trace_print
 1868              	.LVL92:
 1869              	.L73:
 206:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1870              		.loc 1 206 5 discriminator 1 view .LVU433
 206:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1871              		.loc 1 206 42 discriminator 1 view .LVU434
 208:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1872              		.loc 1 208 5 discriminator 1 view .LVU435
 210:user_app/bsp_specific/smtc_bsp_mcu.c **** }
 1873              		.loc 1 210 5 discriminator 1 view .LVU436
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 80


 208:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1874              		.loc 1 208 10 discriminator 1 view .LVU437
 1875 0048 FEE7     		b	.L73
 1876              	.L75:
 1877 004a C046     		.align	2
 1878              	.L74:
 1879 004c 00000000 		.word	.LANCHOR2
 1880 0050 00000000 		.word	.LANCHOR4
 1881              		.cfi_endproc
 1882              	.LFE64:
 1884              		.section	.text.bsp_mcu_init,"ax",%progbits
 1885              		.align	1
 1886              		.global	bsp_mcu_init
 1887              		.syntax unified
 1888              		.code	16
 1889              		.thumb_func
 1890              		.fpu softvfp
 1892              	bsp_mcu_init:
 1893              	.LFB59:
 135:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize MCU HAL library
 1894              		.loc 1 135 1 view -0
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 137:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize clocks
 1898              		.loc 1 137 5 view .LVU439
 135:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize MCU HAL library
 1899              		.loc 1 135 1 is_stmt 0 view .LVU440
 1900 0000 10B5     		push	{r4, lr}
 1901              		.cfi_def_cfa_offset 8
 1902              		.cfi_offset 4, -8
 1903              		.cfi_offset 14, -4
 137:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize clocks
 1904              		.loc 1 137 5 view .LVU441
 1905 0002 FFF7FEFF 		bl	HAL_Init
 1906              	.LVL93:
 139:user_app/bsp_specific/smtc_bsp_mcu.c ****     // Initialize GPIOs
 1907              		.loc 1 139 5 is_stmt 1 view .LVU442
 1908 0006 FFF7FEFF 		bl	bsp_system_clock_config
 1909              	.LVL94:
 141:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1910              		.loc 1 141 5 view .LVU443
 1911 000a FFF7FEFF 		bl	bsp_mcu_gpio_init
 1912              	.LVL95:
 144:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1913              		.loc 1 144 5 view .LVU444
 1914 000e FFF7FEFF 		bl	bsp_tmr_init
 1915              	.LVL96:
 148:user_app/bsp_specific/smtc_bsp_mcu.c ****     // bsp_uart_init( BSP_USER_UART_ID, 115200 );
 1916              		.loc 1 148 5 view .LVU445
 1917 0012 FFF7FEFF 		bl	bsp_uart1_init
 1918              	.LVL97:
 153:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1919              		.loc 1 153 5 view .LVU446
 1920 0016 FFF7FEFF 		bl	bsp_uart2_init
 1921              	.LVL98:
 161:user_app/bsp_specific/smtc_bsp_mcu.c **** 
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 81


 1922              		.loc 1 161 5 view .LVU447
 1923 001a 0523     		movs	r3, #5
 1924 001c 0622     		movs	r2, #6
 1925 001e 0721     		movs	r1, #7
 1926 0020 0120     		movs	r0, #1
 1927 0022 FFF7FEFF 		bl	bsp_spi_init
 1928              	.LVL99:
 164:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1929              		.loc 1 164 5 view .LVU448
 170:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1930              		.loc 1 170 1 is_stmt 0 view .LVU449
 1931              		@ sp needed
 164:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1932              		.loc 1 164 5 view .LVU450
 1933 0026 FFF7FEFF 		bl	bsp_rtc_init
 1934              	.LVL100:
 168:user_app/bsp_specific/smtc_bsp_mcu.c **** #endif
 1935              		.loc 1 168 5 is_stmt 1 view .LVU451
 1936 002a FFF7FEFF 		bl	bsp_watchdog_init
 1937              	.LVL101:
 170:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1938              		.loc 1 170 1 is_stmt 0 view .LVU452
 1939 002e 10BD     		pop	{r4, pc}
 1940              		.cfi_endproc
 1941              	.LFE59:
 1943              		.section	.text.bsp_mcu_set_sleep_for_ms,"ax",%progbits
 1944              		.align	1
 1945              		.global	bsp_mcu_set_sleep_for_ms
 1946              		.syntax unified
 1947              		.code	16
 1948              		.thumb_func
 1949              		.fpu softvfp
 1951              	bsp_mcu_set_sleep_for_ms:
 1952              	.LVL102:
 1953              	.LFB66:
 222:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( milliseconds <= 0 )
 1954              		.loc 1 222 1 is_stmt 1 view -0
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 0
 1957              		@ frame_needed = 0, uses_anonymous_args = 0
 223:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1958              		.loc 1 223 5 view .LVU454
 222:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( milliseconds <= 0 )
 1959              		.loc 1 222 1 is_stmt 0 view .LVU455
 1960 0000 70B5     		push	{r4, r5, r6, lr}
 1961              		.cfi_def_cfa_offset 16
 1962              		.cfi_offset 4, -16
 1963              		.cfi_offset 5, -12
 1964              		.cfi_offset 6, -8
 1965              		.cfi_offset 14, -4
 222:user_app/bsp_specific/smtc_bsp_mcu.c ****     if( milliseconds <= 0 )
 1966              		.loc 1 222 1 view .LVU456
 1967 0002 041E     		subs	r4, r0, #0
 223:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1968              		.loc 1 223 7 view .LVU457
 1969 0004 05DD     		ble	.L77
 228:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 82


 1970              		.loc 1 228 5 is_stmt 1 view .LVU458
 228:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1971              		.loc 1 228 29 is_stmt 0 view .LVU459
 1972 0006 104D     		ldr	r5, .L88
 1973 0008 2B78     		ldrb	r3, [r5]
 228:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1974              		.loc 1 228 7 view .LVU460
 1975 000a 022B     		cmp	r3, #2
 1976 000c 0BD1     		bne	.L87
 230:user_app/bsp_specific/smtc_bsp_mcu.c ****         return;
 1977              		.loc 1 230 9 is_stmt 1 view .LVU461
 230:user_app/bsp_specific/smtc_bsp_mcu.c ****         return;
 1978              		.loc 1 230 29 is_stmt 0 view .LVU462
 1979 000e 0023     		movs	r3, #0
 1980 0010 2B70     		strb	r3, [r5]
 231:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 1981              		.loc 1 231 9 is_stmt 1 view .LVU463
 1982              	.LVL103:
 1983              	.L77:
 272:user_app/bsp_specific/smtc_bsp_mcu.c **** 
 1984              		.loc 1 272 1 is_stmt 0 view .LVU464
 1985              		@ sp needed
 1986 0012 70BD     		pop	{r4, r5, r6, pc}
 1987              	.LVL104:
 1988              	.L82:
 239:user_app/bsp_specific/smtc_bsp_mcu.c ****     {
 1989              		.loc 1 239 34 discriminator 1 view .LVU465
 1990 0014 2B78     		ldrb	r3, [r5]
 238:user_app/bsp_specific/smtc_bsp_mcu.c ****            ( bsp_lp_current_mode == LOW_POWER_ENABLE ) )
 1991              		.loc 1 238 77 discriminator 1 view .LVU466
 1992 0016 002B     		cmp	r3, #0
 1993 0018 0AD1     		bne	.L86
 241:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_rtc_wakeup_timer_set_ms( BSP_WATCHDOG_RELOAD_PERIOD_SECONDS * 1000 );
 1994              		.loc 1 241 9 is_stmt 1 view .LVU467
 241:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_rtc_wakeup_timer_set_ms( BSP_WATCHDOG_RELOAD_PERIOD_SECONDS * 1000 );
 1995              		.loc 1 241 22 is_stmt 0 view .LVU468
 1996 001a 0C4B     		ldr	r3, .L88+4
 1997 001c E418     		adds	r4, r4, r3
 1998              	.LVL105:
 242:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_low_power_handler( );
 1999              		.loc 1 242 9 is_stmt 1 view .LVU469
 2000 001e FFF7FEFF 		bl	bsp_rtc_wakeup_timer_set_ms
 2001              	.LVL106:
 243:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_watchdog_reload( );
 2002              		.loc 1 243 9 view .LVU470
 2003 0022 FFF7FEFF 		bl	bsp_low_power_handler
 2004              	.LVL107:
 2005              	.L87:
 244:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 2006              		.loc 1 244 9 view .LVU471
 2007 0026 FFF7FEFF 		bl	bsp_watchdog_reload
 2008              	.LVL108:
 238:user_app/bsp_specific/smtc_bsp_mcu.c ****            ( bsp_lp_current_mode == LOW_POWER_ENABLE ) )
 2009              		.loc 1 238 10 view .LVU472
 2010 002a 0948     		ldr	r0, .L88+8
 2011 002c 8442     		cmp	r4, r0
 2012 002e F1DC     		bgt	.L82
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 83


 2013              	.L86:
 246:user_app/bsp_specific/smtc_bsp_mcu.c ****     {  // have to wake up on modem cmd
 2014              		.loc 1 246 5 view .LVU473
 246:user_app/bsp_specific/smtc_bsp_mcu.c ****     {  // have to wake up on modem cmd
 2015              		.loc 1 246 29 is_stmt 0 view .LVU474
 2016 0030 2B78     		ldrb	r3, [r5]
 246:user_app/bsp_specific/smtc_bsp_mcu.c ****     {  // have to wake up on modem cmd
 2017              		.loc 1 246 7 view .LVU475
 2018 0032 002B     		cmp	r3, #0
 2019 0034 EDD1     		bne	.L77
 248:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_low_power_handler( );
 2020              		.loc 1 248 9 is_stmt 1 view .LVU476
 2021 0036 2000     		movs	r0, r4
 2022 0038 FFF7FEFF 		bl	bsp_rtc_wakeup_timer_set_ms
 2023              	.LVL109:
 249:user_app/bsp_specific/smtc_bsp_mcu.c ****         bsp_watchdog_reload( );
 2024              		.loc 1 249 9 view .LVU477
 2025 003c FFF7FEFF 		bl	bsp_low_power_handler
 2026              	.LVL110:
 250:user_app/bsp_specific/smtc_bsp_mcu.c ****     }
 2027              		.loc 1 250 9 view .LVU478
 2028 0040 FFF7FEFF 		bl	bsp_watchdog_reload
 2029              	.LVL111:
 2030 0044 E5E7     		b	.L77
 2031              	.L89:
 2032 0046 C046     		.align	2
 2033              	.L88:
 2034 0048 00000000 		.word	.LANCHOR1
 2035 004c E0B1FFFF 		.word	-20000
 2036 0050 204E0000 		.word	20000
 2037              		.cfi_endproc
 2038              	.LFE66:
 2040              		.section	.rodata
 2041              		.set	.LANCHOR2,. + 0
 2042              	.LC6:
 2043 0000 1B5B303B 		.ascii	"\033[0;31m\000"
 2043      33316D00 
 2044              	.LC8:
 2045 0008 4552524F 		.ascii	"ERROR: \000"
 2045      523A2000 
 2046              	.LC10:
 2047 0010 25730A00 		.ascii	"%s\012\000"
 2048              	.LC11:
 2049 0014 1B5B306D 		.ascii	"\033[0m\000"
 2049      00
 2050              	.LC12:
 2051 0019 50414E49 		.ascii	"PANIC\000"
 2051      4300
 2052              	.LC19:
 2053 001f 4C52314D 		.ascii	"LR1MAC PANIC\000"
 2053      41432050 
 2053      414E4943 
 2053      00
 2054              		.section	.bss.bsp_exit_wait,"aw",%nobits
 2055              		.set	.LANCHOR0,. + 0
 2058              	bsp_exit_wait:
 2059 0000 00       		.space	1
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 84


 2060              		.section	.bss.bsp_lp_current_mode,"aw",%nobits
 2061              		.set	.LANCHOR1,. + 0
 2064              	bsp_lp_current_mode:
 2065 0000 00       		.space	1
 2066              		.section	.rodata.__func__.7248,"a"
 2067              		.set	.LANCHOR3,. + 0
 2070              	__func__.7248:
 2071 0000 6273705F 		.ascii	"bsp_mcu_panic\000"
 2071      6D63755F 
 2071      70616E69 
 2071      6300
 2072              		.section	.rodata.__func__.7254,"a"
 2073              		.set	.LANCHOR4,. + 0
 2076              	__func__.7254:
 2077 0000 6273705F 		.ascii	"bsp_mcu_handle_lr1mac_issue\000"
 2077      6D63755F 
 2077      68616E64 
 2077      6C655F6C 
 2077      72316D61 
 2078              		.text
 2079              	.Letext0:
 2080              		.file 4 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.external
 2081              		.file 5 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.external
 2082              		.file 6 "user_app/mcu_core/system_stm32l0xx.h"
 2083              		.file 7 "user_app/mcu_core/stm32l073xx.h"
 2084              		.file 8 "user_app/mcu_core/stm32l0xx.h"
 2085              		.file 9 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 2086              		.file 10 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 2087              		.file 11 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 2088              		.file 12 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 2089              		.file 13 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externa
 2090              		.file 14 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externa
 2091              		.file 15 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externa
 2092              		.file 16 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externa
 2093              		.file 17 "smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_gpio_pin_names.h"
 2094              		.file 18 "smtc_bsp/smtc_bsp_gpio.h"
 2095              		.file 19 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externa
 2096              		.file 20 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externa
 2097              		.file 21 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.externa
 2098              		.file 22 "smtc_bsp/smtc_bsp_uart.h"
 2099              		.file 23 "smtc_bsp/smtc_bsp_spi.h"
 2100              		.file 24 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pwr.h"
 2101              		.file 25 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_pwr_ex.h"
 2102              		.file 26 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
 2103              		.file 27 "smtc_bsp/smtc_bsp_adc.h"
 2104              		.file 28 "smtc_bsp/smtc_bsp_rtc.h"
 2105              		.file 29 "smtc_bsp/smtc_bsp_watchdog.h"
 2106              		.file 30 "smtc_bsp/smtc_bsp_tmr.h"
 2107              		.file 31 "<built-in>"
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 85


DEFINED SYMBOLS
                            *ABS*:0000000000000000 smtc_bsp_mcu.c
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:15     .text.bsp_mcu_wait_us:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:23     .text.bsp_mcu_wait_us:0000000000000000 bsp_mcu_wait_us
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:108    .text.bsp_mcu_wait_us:0000000000000044 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:113    .text.bsp_mcu_get_battery_level:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:120    .text.bsp_mcu_get_battery_level:0000000000000000 bsp_mcu_get_battery_level
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:136    .text.bsp_mcu_disable_low_power_wait:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:143    .text.bsp_mcu_disable_low_power_wait:0000000000000000 bsp_mcu_disable_low_power_wait
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:167    .text.bsp_mcu_disable_low_power_wait:000000000000000c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:173    .text.bsp_mcu_enable_low_power_wait:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:180    .text.bsp_mcu_enable_low_power_wait:0000000000000000 bsp_mcu_enable_low_power_wait
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:204    .text.bsp_mcu_enable_low_power_wait:000000000000000c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:210    .text.bsp_mcu_disable_once_low_power_wait:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:217    .text.bsp_mcu_disable_once_low_power_wait:0000000000000000 bsp_mcu_disable_once_low_power_wait
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:242    .text.bsp_mcu_disable_once_low_power_wait:0000000000000010 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:249    .text.bsp_mcu_get_mcu_temperature:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:256    .text.bsp_mcu_get_mcu_temperature:0000000000000000 bsp_mcu_get_mcu_temperature
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:334    .text.bsp_mcu_get_mcu_temperature:000000000000003c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:341    .text.bsp_mcu_get_mcu_voltage:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:348    .text.bsp_mcu_get_mcu_voltage:0000000000000000 bsp_mcu_get_mcu_voltage
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:364    .text.SysTick_Handler:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:371    .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:398    .text.bsp_trace_print:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:405    .text.bsp_trace_print:0000000000000000 bsp_trace_print
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1315   .text.vprint:0000000000000000 vprint
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:442    .text.bsp_system_clock_config:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:448    .text.bsp_system_clock_config:0000000000000000 bsp_system_clock_config
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:606    .text.bsp_mcu_start_systick:0000000000000000 bsp_mcu_start_systick
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:593    .text.bsp_system_clock_config:0000000000000094 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:600    .text.bsp_mcu_start_systick:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:646    .text.bsp_mcu_stop_systick:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:652    .text.bsp_mcu_stop_systick:0000000000000000 bsp_mcu_stop_systick
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:672    .text.bsp_mcu_stop_systick:0000000000000008 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:677    .text.bsp_mcu_gpio_init:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:683    .text.bsp_mcu_gpio_init:0000000000000000 bsp_mcu_gpio_init
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:835    .text.bsp_mcu_gpio_init:0000000000000088 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:840    .text.HAL_MspInit:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:847    .text.HAL_MspInit:0000000000000000 HAL_MspInit
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:900    .text.HAL_MspInit:000000000000003c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:905    .text.bsp_lpm_enter_stop_mode:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:911    .text.bsp_lpm_enter_stop_mode:0000000000000000 bsp_lpm_enter_stop_mode
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1369   .text.bsp_mcu_critical_section_begin:0000000000000000 bsp_mcu_critical_section_begin
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1136   .text.bsp_mcu_deinit:0000000000000000 bsp_mcu_deinit
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:984    .text.bsp_lpm_enter_stop_mode:0000000000000034 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:989    .text.bsp_lpm_exit_stop_mode:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:995    .text.bsp_lpm_exit_stop_mode:0000000000000000 bsp_lpm_exit_stop_mode
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1173   .text.bsp_mcu_reinit:0000000000000000 bsp_mcu_reinit
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1048   .text.bsp_low_power_handler:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1054   .text.bsp_low_power_handler:0000000000000000 bsp_low_power_handler
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1125   .text.bsp_low_power_handler:000000000000001c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1130   .text.bsp_mcu_deinit:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1167   .text.bsp_mcu_reinit:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1214   .text.bsp_system_clock_re_config_after_stop:0000000000000000 bsp_system_clock_re_config_after_stop
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1208   .text.bsp_system_clock_re_config_after_stop:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1302   .text.bsp_system_clock_re_config_after_stop:000000000000005c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1309   .text.vprint:0000000000000000 $t
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 86


/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1362   .text.bsp_mcu_critical_section_begin:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1418   .text.bsp_mcu_critical_section_end:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1425   .text.bsp_mcu_critical_section_end:0000000000000000 bsp_mcu_critical_section_end
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1457   .text.bsp_mcu_disable_periph_irq:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1464   .text.bsp_mcu_disable_periph_irq:0000000000000000 bsp_mcu_disable_periph_irq
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1491   .text.bsp_mcu_enable_periph_irq:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1498   .text.bsp_mcu_enable_periph_irq:0000000000000000 bsp_mcu_enable_periph_irq
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1525   .text.bsp_disable_irq:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1532   .text.bsp_disable_irq:0000000000000000 bsp_disable_irq
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1560   .text.bsp_enable_irq:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1567   .text.bsp_enable_irq:0000000000000000 bsp_enable_irq
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1595   .text.bsp_mcu_reset:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1602   .text.bsp_mcu_reset:0000000000000000 bsp_mcu_reset
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1677   .text.bsp_mcu_reset:0000000000000014 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1685   .text.bsp_mcu_modem_need_reset:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1692   .text.bsp_mcu_modem_need_reset:0000000000000000 bsp_mcu_modem_need_reset
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1707   .text.bsp_mcu_panic:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1714   .text.bsp_mcu_panic:0000000000000000 bsp_mcu_panic
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1790   .text.bsp_mcu_panic:000000000000004c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1796   .text.bsp_mcu_handle_lr1mac_issue:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1803   .text.bsp_mcu_handle_lr1mac_issue:0000000000000000 bsp_mcu_handle_lr1mac_issue
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1879   .text.bsp_mcu_handle_lr1mac_issue:000000000000004c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1885   .text.bsp_mcu_init:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1892   .text.bsp_mcu_init:0000000000000000 bsp_mcu_init
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1944   .text.bsp_mcu_set_sleep_for_ms:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:1951   .text.bsp_mcu_set_sleep_for_ms:0000000000000000 bsp_mcu_set_sleep_for_ms
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:2034   .text.bsp_mcu_set_sleep_for_ms:0000000000000048 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:2058   .bss.bsp_exit_wait:0000000000000000 bsp_exit_wait
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:2059   .bss.bsp_exit_wait:0000000000000000 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:2064   .bss.bsp_lp_current_mode:0000000000000000 bsp_lp_current_mode
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:2065   .bss.bsp_lp_current_mode:0000000000000000 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:2070   .rodata.__func__.7248:0000000000000000 __func__.7248
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s:2076   .rodata.__func__.7254:0000000000000000 __func__.7254

UNDEFINED SYMBOLS
__aeabi_idiv
__aeabi_uidiv
bsp_adc_init
bsp_adc_get_value
bsp_adc_deinit
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
bsp_gpio_init_out
bsp_gpio_init_in
HAL_PWR_DisablePVD
HAL_PWREx_EnableUltraLowPower
HAL_PWREx_EnableFastWakeUp
HAL_PWR_EnterSTOPMode
bsp_spi_deinit
bsp_uart2_deinit
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//ccxzAO6e.s 			page 87


bsp_uart1_deinit
bsp_uart1_init
bsp_uart2_init
bsp_spi_init
vsprintf
strlen
bsp_uart2_tx
bsp_gpio_irq_disable
bsp_tmr_irq_disable
bsp_gpio_irq_enable
bsp_tmr_irq_enable
HAL_Init
bsp_tmr_init
bsp_rtc_init
bsp_watchdog_init
bsp_rtc_wakeup_timer_set_ms
bsp_watchdog_reload
