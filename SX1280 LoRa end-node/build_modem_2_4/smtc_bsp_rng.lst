ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 23, 1
   3              		.eabi_attribute 24, 1
   4              		.eabi_attribute 25, 1
   5              		.eabi_attribute 26, 1
   6              		.eabi_attribute 30, 4
   7              		.eabi_attribute 34, 0
   8              		.eabi_attribute 18, 4
   9              		.file	"smtc_bsp_rng.c"
  10              		.text
  11              	.Ltext0:
  12              		.cfi_sections	.debug_frame
  13              		.section	.text.bsp_rng_get_random,"ax",%progbits
  14              		.align	1
  15              		.global	bsp_rng_get_random
  16              		.arch armv6s-m
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	bsp_rng_get_random:
  23              	.LFB47:
  24              		.file 1 "smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c"
   1:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** /*!
   2:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * \file      smtc_bsp_rng.c
   3:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *
   4:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * \brief     Board specific package RNG API implementation
   5:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *
   6:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * Revised BSD License
   7:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * Copyright Semtech Corporation 2020. All rights reserved.
   8:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *
   9:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * Redistribution and use in source and binary forms, with or without
  10:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * modification, are permitted provided that the following conditions are met:
  11:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *     * Redistributions of source code must retain the above copyright
  12:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *       notice, this list of conditions and the following disclaimer.
  13:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *     * Redistributions in binary form must reproduce the above copyright
  14:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *       notice, this list of conditions and the following disclaimer in the
  15:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *       documentation and/or other materials provided with the distribution.
  16:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *     * Neither the name of the Semtech corporation nor the
  17:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *       names of its contributors may be used to endorse or promote products
  18:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *       derived from this software without specific prior written permission.
  19:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  *
  20:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL SEMTECH CORPORATION BE LIABLE FOR ANY DIRECT,
  24:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  25:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  26:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  27:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  28:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  29:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  */
  31:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  32:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** /*
  33:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * -----------------------------------------------------------------------------
  34:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * --- DEPENDENCIES ------------------------------------------------------------
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 2


  35:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  */
  36:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  37:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** #include <stdint.h>   // C99 types
  38:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** #include <stdbool.h>  // bool type
  39:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  40:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** #include "stm32l0xx_hal.h"
  41:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** #include "smtc_bsp_rng.h"
  42:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** #include "smtc_bsp_mcu.h"
  43:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  44:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** /*
  45:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * -----------------------------------------------------------------------------
  46:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * --- PRIVATE MACROS-----------------------------------------------------------
  47:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  */
  48:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  49:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** /*
  50:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * -----------------------------------------------------------------------------
  51:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * --- PRIVATE CONSTANTS -------------------------------------------------------
  52:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  */
  53:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  54:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** /*
  55:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * -----------------------------------------------------------------------------
  56:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * --- PRIVATE TYPES -----------------------------------------------------------
  57:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  */
  58:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  59:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** /*
  60:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * -----------------------------------------------------------------------------
  61:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * --- PRIVATE VARIABLES -------------------------------------------------------
  62:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  */
  63:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  64:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** static RNG_HandleTypeDef rng_handle;
  65:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  66:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** /*
  67:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * -----------------------------------------------------------------------------
  68:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * --- PRIVATE FUNCTIONS DECLARATION -------------------------------------------
  69:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  */
  70:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  71:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** /*
  72:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * -----------------------------------------------------------------------------
  73:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  * --- PUBLIC FUNCTIONS DEFINITION ---------------------------------------------
  74:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****  */
  75:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  76:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** uint32_t bsp_rng_get_random( void )
  77:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** {
  25              		.loc 1 77 1 view -0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  78:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     uint32_t rand_nb = 0;
  29              		.loc 1 78 5 view .LVU1
  30              	.LVL0:
  79:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  80:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     // Init and enable RNG
  81:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     rng_handle.Instance = RNG;
  31              		.loc 1 81 5 view .LVU2
  77:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     uint32_t rand_nb = 0;
  32              		.loc 1 77 1 is_stmt 0 view .LVU3
  33 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 3


  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39              		.loc 1 81 25 view .LVU4
  40 0002 094C     		ldr	r4, .L6
  41 0004 094B     		ldr	r3, .L6+4
  82:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  83:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     if( HAL_RNG_Init( &rng_handle ) != HAL_OK )
  42              		.loc 1 83 9 view .LVU5
  43 0006 2000     		movs	r0, r4
  81:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  44              		.loc 1 81 25 view .LVU6
  45 0008 2360     		str	r3, [r4]
  46              		.loc 1 83 5 is_stmt 1 view .LVU7
  47              		.loc 1 83 9 is_stmt 0 view .LVU8
  48 000a FFF7FEFF 		bl	HAL_RNG_Init
  49              	.LVL1:
  50              		.loc 1 83 7 view .LVU9
  51 000e 0028     		cmp	r0, #0
  52 0010 01D0     		beq	.L2
  84:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     {
  85:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         bsp_mcu_panic( );
  53              		.loc 1 85 9 is_stmt 1 view .LVU10
  54 0012 FFF7FEFF 		bl	bsp_mcu_panic
  55              	.LVL2:
  56              	.L2:
  86:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
  87:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  88:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     // Wait for data ready interrupt: 42+4 RNG clock cycles
  89:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     rand_nb = ( uint32_t ) HAL_RNG_GetRandomNumber( &rng_handle );
  57              		.loc 1 89 5 view .LVU11
  58              		.loc 1 89 28 is_stmt 0 view .LVU12
  59 0016 2000     		movs	r0, r4
  60 0018 FFF7FEFF 		bl	HAL_RNG_GetRandomNumber
  61              	.LVL3:
  62 001c 0500     		movs	r5, r0
  63              	.LVL4:
  90:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  91:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     // Disable RNG
  92:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     HAL_RNG_DeInit( &rng_handle );
  64              		.loc 1 92 5 is_stmt 1 view .LVU13
  65 001e 2000     		movs	r0, r4
  66              	.LVL5:
  67              		.loc 1 92 5 is_stmt 0 view .LVU14
  68 0020 FFF7FEFF 		bl	HAL_RNG_DeInit
  69              	.LVL6:
  93:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  94:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     return rand_nb;
  70              		.loc 1 94 5 is_stmt 1 view .LVU15
  95:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** }
  71              		.loc 1 95 1 is_stmt 0 view .LVU16
  72              		@ sp needed
  73 0024 2800     		movs	r0, r5
  74              	.LVL7:
  75              		.loc 1 95 1 view .LVU17
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 4


  76 0026 70BD     		pop	{r4, r5, r6, pc}
  77              	.L7:
  78              		.align	2
  79              	.L6:
  80 0028 00000000 		.word	.LANCHOR0
  81 002c 00500240 		.word	1073893376
  82              		.cfi_endproc
  83              	.LFE47:
  85              		.global	__aeabi_uidivmod
  86              		.section	.text.bsp_rng_get_random_in_range,"ax",%progbits
  87              		.align	1
  88              		.global	bsp_rng_get_random_in_range
  89              		.syntax unified
  90              		.code	16
  91              		.thumb_func
  92              		.fpu softvfp
  94              	bsp_rng_get_random_in_range:
  95              	.LVL8:
  96              	.LFB48:
  96:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
  97:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** uint32_t bsp_rng_get_random_in_range( const uint32_t val_1, const uint32_t val_2 )
  98:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** {
  97              		.loc 1 98 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
  99:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     if( val_1 <= val_2 )
 101              		.loc 1 99 5 view .LVU19
  98:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     if( val_1 <= val_2 )
 102              		.loc 1 98 1 is_stmt 0 view .LVU20
 103 0000 70B5     		push	{r4, r5, r6, lr}
 104              		.cfi_def_cfa_offset 16
 105              		.cfi_offset 4, -16
 106              		.cfi_offset 5, -12
 107              		.cfi_offset 6, -8
 108              		.cfi_offset 14, -4
  98:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     if( val_1 <= val_2 )
 109              		.loc 1 98 1 view .LVU21
 110 0002 0500     		movs	r5, r0
 111 0004 0C00     		movs	r4, r1
 112              		.loc 1 99 7 view .LVU22
 113 0006 8842     		cmp	r0, r1
 114 0008 07D8     		bhi	.L9
 115              	.LVL9:
 116              	.LBB4:
 117              	.LBI4:
  97:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** {
 118              		.loc 1 97 10 is_stmt 1 view .LVU23
 119              	.LBB5:
 100:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     {
 101:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         return ( uint32_t )( ( bsp_rng_get_random( ) % ( val_2 - val_1 + 1 ) ) + val_1 );
 120              		.loc 1 101 9 view .LVU24
 121              		.loc 1 101 72 is_stmt 0 view .LVU25
 122 000a 0134     		adds	r4, r4, #1
 123              		.loc 1 101 32 view .LVU26
 124 000c FFF7FEFF 		bl	bsp_rng_get_random
 125              	.LVL10:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 5


 126              		.loc 1 101 72 view .LVU27
 127 0010 611B     		subs	r1, r4, r5
 128              		.loc 1 101 54 view .LVU28
 129 0012 FFF7FEFF 		bl	__aeabi_uidivmod
 130              	.LVL11:
 131              		.loc 1 101 16 view .LVU29
 132 0016 4819     		adds	r0, r1, r5
 133              	.LVL12:
 134              	.L8:
 135              		.loc 1 101 16 view .LVU30
 136              	.LBE5:
 137              	.LBE4:
 102:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 103:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     else
 104:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     {
 105:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         return ( uint32_t )( ( bsp_rng_get_random( ) % ( val_1 - val_2 + 1 ) ) + val_2 );
 106:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 107:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** }
 138              		.loc 1 107 1 view .LVU31
 139              		@ sp needed
 140              	.LVL13:
 141              		.loc 1 107 1 view .LVU32
 142 0018 70BD     		pop	{r4, r5, r6, pc}
 143              	.LVL14:
 144              	.L9:
 105:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 145              		.loc 1 105 9 is_stmt 1 view .LVU33
 105:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 146              		.loc 1 105 32 is_stmt 0 view .LVU34
 147 001a FFF7FEFF 		bl	bsp_rng_get_random
 148              	.LVL15:
 105:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 149              		.loc 1 105 64 view .LVU35
 150 001e 291B     		subs	r1, r5, r4
 105:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 151              		.loc 1 105 72 view .LVU36
 152 0020 0131     		adds	r1, r1, #1
 105:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 153              		.loc 1 105 54 view .LVU37
 154 0022 FFF7FEFF 		bl	__aeabi_uidivmod
 155              	.LVL16:
 105:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 156              		.loc 1 105 16 view .LVU38
 157 0026 0819     		adds	r0, r1, r4
 158 0028 F6E7     		b	.L8
 159              		.cfi_endproc
 160              	.LFE48:
 162              		.section	.text.bsp_rng_get_signed_random_in_range,"ax",%progbits
 163              		.align	1
 164              		.global	bsp_rng_get_signed_random_in_range
 165              		.syntax unified
 166              		.code	16
 167              		.thumb_func
 168              		.fpu softvfp
 170              	bsp_rng_get_signed_random_in_range:
 171              	.LVL17:
 172              	.LFB49:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 6


 108:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
 109:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** int32_t bsp_rng_get_signed_random_in_range( const int32_t val_1, const int32_t val_2 )
 110:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** {
 173              		.loc 1 110 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 111:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     uint32_t tmp_range = 0;  // ( val_1 <= val_2 ) ? ( val_2 - val_1 ) : ( val_1 - val_2 );
 177              		.loc 1 111 5 view .LVU40
 112:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
 113:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     if( val_1 <= val_2 )
 178              		.loc 1 113 5 view .LVU41
 110:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     uint32_t tmp_range = 0;  // ( val_1 <= val_2 ) ? ( val_2 - val_1 ) : ( val_1 - val_2 );
 179              		.loc 1 110 1 is_stmt 0 view .LVU42
 180 0000 70B5     		push	{r4, r5, r6, lr}
 181              		.cfi_def_cfa_offset 16
 182              		.cfi_offset 4, -16
 183              		.cfi_offset 5, -12
 184              		.cfi_offset 6, -8
 185              		.cfi_offset 14, -4
 110:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     uint32_t tmp_range = 0;  // ( val_1 <= val_2 ) ? ( val_2 - val_1 ) : ( val_1 - val_2 );
 186              		.loc 1 110 1 view .LVU43
 187 0002 0500     		movs	r5, r0
 188 0004 0C00     		movs	r4, r1
 189              		.loc 1 113 7 view .LVU44
 190 0006 8842     		cmp	r0, r1
 191 0008 05DC     		bgt	.L12
 114:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     {
 115:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         tmp_range = ( val_2 - val_1 );
 192              		.loc 1 115 9 is_stmt 1 view .LVU45
 193              	.LVL18:
 116:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         return ( int32_t )( ( val_1 + bsp_rng_get_random_in_range( 0, tmp_range ) ) );
 194              		.loc 1 116 9 view .LVU46
 115:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         return ( int32_t )( ( val_1 + bsp_rng_get_random_in_range( 0, tmp_range ) ) );
 195              		.loc 1 115 29 is_stmt 0 view .LVU47
 196 000a 091A     		subs	r1, r1, r0
 197              	.LVL19:
 198              		.loc 1 116 39 view .LVU48
 199 000c 0020     		movs	r0, #0
 200              	.LVL20:
 201              		.loc 1 116 39 view .LVU49
 202 000e FFF7FEFF 		bl	bsp_rng_get_random_in_range
 203              	.LVL21:
 204              		.loc 1 116 37 view .LVU50
 205 0012 2818     		adds	r0, r5, r0
 206              	.LVL22:
 207              	.L11:
 117:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 118:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     else
 119:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     {
 120:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         tmp_range = ( val_1 - val_2 );
 121:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         return ( int32_t )( ( val_2 + bsp_rng_get_random_in_range( 0, tmp_range ) ) );
 122:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 123:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** }
 208              		.loc 1 123 1 view .LVU51
 209              		@ sp needed
 210              	.LVL23:
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 7


 211              	.LVL24:
 212              		.loc 1 123 1 view .LVU52
 213 0014 70BD     		pop	{r4, r5, r6, pc}
 214              	.LVL25:
 215              	.L12:
 120:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         return ( int32_t )( ( val_2 + bsp_rng_get_random_in_range( 0, tmp_range ) ) );
 216              		.loc 1 120 9 is_stmt 1 view .LVU53
 121:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 217              		.loc 1 121 9 view .LVU54
 120:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****         return ( int32_t )( ( val_2 + bsp_rng_get_random_in_range( 0, tmp_range ) ) );
 218              		.loc 1 120 29 is_stmt 0 view .LVU55
 219 0016 411A     		subs	r1, r0, r1
 220              	.LVL26:
 121:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 221              		.loc 1 121 39 view .LVU56
 222 0018 0020     		movs	r0, #0
 223              	.LVL27:
 121:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 224              		.loc 1 121 39 view .LVU57
 225 001a FFF7FEFF 		bl	bsp_rng_get_random_in_range
 226              	.LVL28:
 121:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 227              		.loc 1 121 37 view .LVU58
 228 001e 2018     		adds	r0, r4, r0
 121:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     }
 229              		.loc 1 121 16 view .LVU59
 230 0020 F8E7     		b	.L11
 231              		.cfi_endproc
 232              	.LFE49:
 234              		.section	.text.HAL_RNG_MspInit,"ax",%progbits
 235              		.align	1
 236              		.global	HAL_RNG_MspInit
 237              		.syntax unified
 238              		.code	16
 239              		.thumb_func
 240              		.fpu softvfp
 242              	HAL_RNG_MspInit:
 243              	.LVL29:
 244              	.LFB50:
 124:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
 125:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** void HAL_RNG_MspInit( RNG_HandleTypeDef* hrng )
 126:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** {
 245              		.loc 1 126 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 127:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     // RNG Peripheral clock enable
 128:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     __RNG_CLK_ENABLE( );
 250              		.loc 1 128 5 view .LVU61
 251              	.LBB6:
 252              		.loc 1 128 5 view .LVU62
 253              		.loc 1 128 5 view .LVU63
 254 0000 8020     		movs	r0, #128
 255              	.LVL30:
 256              		.loc 1 128 5 is_stmt 0 view .LVU64
 257 0002 064A     		ldr	r2, .L15
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 8


 258 0004 4003     		lsls	r0, r0, #13
 259 0006 116B     		ldr	r1, [r2, #48]
 260              	.LBE6:
 126:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     // RNG Peripheral clock enable
 261              		.loc 1 126 1 view .LVU65
 262 0008 82B0     		sub	sp, sp, #8
 263              		.cfi_def_cfa_offset 8
 264              	.LBB7:
 265              		.loc 1 128 5 view .LVU66
 266 000a 0143     		orrs	r1, r0
 267 000c 1163     		str	r1, [r2, #48]
 268              		.loc 1 128 5 is_stmt 1 view .LVU67
 269 000e 136B     		ldr	r3, [r2, #48]
 270 0010 0340     		ands	r3, r0
 271 0012 0193     		str	r3, [sp, #4]
 272              		.loc 1 128 5 view .LVU68
 273 0014 019B     		ldr	r3, [sp, #4]
 274              	.LBE7:
 275              		.loc 1 128 5 view .LVU69
 129:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** }
 276              		.loc 1 129 1 is_stmt 0 view .LVU70
 277 0016 02B0     		add	sp, sp, #8
 278              		@ sp needed
 279 0018 7047     		bx	lr
 280              	.L16:
 281 001a C046     		.align	2
 282              	.L15:
 283 001c 00100240 		.word	1073876992
 284              		.cfi_endproc
 285              	.LFE50:
 287              		.section	.text.HAL_RNG_MspDeInit,"ax",%progbits
 288              		.align	1
 289              		.global	HAL_RNG_MspDeInit
 290              		.syntax unified
 291              		.code	16
 292              		.thumb_func
 293              		.fpu softvfp
 295              	HAL_RNG_MspDeInit:
 296              	.LVL31:
 297              	.LFB51:
 130:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
 131:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** void HAL_RNG_MspDeInit( RNG_HandleTypeDef* hrng )
 132:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** {
 298              		.loc 1 132 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 133:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     // Enable RNG reset state
 134:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     __RNG_FORCE_RESET( );
 303              		.loc 1 134 5 view .LVU72
 304 0000 8022     		movs	r2, #128
 305 0002 054B     		ldr	r3, .L18
 306 0004 5203     		lsls	r2, r2, #13
 307 0006 196A     		ldr	r1, [r3, #32]
 135:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
 136:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     // Release RNG from reset state
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 9


 137:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c ****     __RNG_RELEASE_RESET( );
 138:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** }
 308              		.loc 1 138 1 is_stmt 0 view .LVU73
 309              		@ sp needed
 134:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** 
 310              		.loc 1 134 5 view .LVU74
 311 0008 0A43     		orrs	r2, r1
 312 000a 1A62     		str	r2, [r3, #32]
 137:smtc_bsp/arm/stm32/stm32l0xx/smtc_bsp_rng.c **** }
 313              		.loc 1 137 5 is_stmt 1 view .LVU75
 314 000c 1A6A     		ldr	r2, [r3, #32]
 315 000e 0349     		ldr	r1, .L18+4
 316 0010 0A40     		ands	r2, r1
 317 0012 1A62     		str	r2, [r3, #32]
 318              		.loc 1 138 1 is_stmt 0 view .LVU76
 319 0014 7047     		bx	lr
 320              	.L19:
 321 0016 C046     		.align	2
 322              	.L18:
 323 0018 00100240 		.word	1073876992
 324 001c FFFFEFFF 		.word	-1048577
 325              		.cfi_endproc
 326              	.LFE51:
 328              		.section	.bss.rng_handle,"aw",%nobits
 329              		.align	2
 330              		.set	.LANCHOR0,. + 0
 333              	rng_handle:
 334 0000 00000000 		.space	16
 334      00000000 
 334      00000000 
 334      00000000 
 335              		.text
 336              	.Letext0:
 337              		.file 2 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.external
 338              		.file 3 "/Applications/STM32CubeIDE.app/Contents/Eclipse/plugins/com.st.stm32cube.ide.mcu.external
 339              		.file 4 "user_app/mcu_core/system_stm32l0xx.h"
 340              		.file 5 "user_app/mcu_core/stm32l073xx.h"
 341              		.file 6 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 342              		.file 7 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rng.h"
 343              		.file 8 "smtc_bsp/arm/stm32/stm32_hal/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 344              		.file 9 "smtc_bsp/smtc_bsp_mcu.h"
ARM GAS  /var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 smtc_bsp_rng.c
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:14     .text.bsp_rng_get_random:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:22     .text.bsp_rng_get_random:0000000000000000 bsp_rng_get_random
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:80     .text.bsp_rng_get_random:0000000000000028 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:87     .text.bsp_rng_get_random_in_range:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:94     .text.bsp_rng_get_random_in_range:0000000000000000 bsp_rng_get_random_in_range
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:163    .text.bsp_rng_get_signed_random_in_range:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:170    .text.bsp_rng_get_signed_random_in_range:0000000000000000 bsp_rng_get_signed_random_in_range
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:235    .text.HAL_RNG_MspInit:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:242    .text.HAL_RNG_MspInit:0000000000000000 HAL_RNG_MspInit
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:283    .text.HAL_RNG_MspInit:000000000000001c $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:288    .text.HAL_RNG_MspDeInit:0000000000000000 $t
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:295    .text.HAL_RNG_MspDeInit:0000000000000000 HAL_RNG_MspDeInit
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:323    .text.HAL_RNG_MspDeInit:0000000000000018 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:329    .bss.rng_handle:0000000000000000 $d
/var/folders/bq/yv49bw8j2kd6w3hsq868qv180000gn/T//cc5F6Sew.s:333    .bss.rng_handle:0000000000000000 rng_handle

UNDEFINED SYMBOLS
HAL_RNG_Init
bsp_mcu_panic
HAL_RNG_GetRandomNumber
HAL_RNG_DeInit
__aeabi_uidivmod
